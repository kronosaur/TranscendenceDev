<?xml version="1.0" encoding="utf-8"?>

<TranscendenceModule>

	<Type unid="&unidTestTSE;">
		<Events>
			<OnGlobalStartDiagnostics>
				(diagEval (list

					;	CAffinityCriteria

					{	test:'(tseAffinityCriteria
								"*"
								"asteroids")								result:{ criteria:"*" match:True weight:1000 }	}

					{	test:'(tseAffinityCriteria
								"*~"
								"asteroids")								result:{ criteria:"*~" match:Nil weight:0 }	}

					{	test:'(tseAffinityCriteria
								"+asteroids"
								"asteroids")								result:{ criteria:"+asteroids;" match:True weight:1000 }	}

					{	test:'(tseAffinityCriteria
								"++asteroids"
								"asteroids")								result:{ criteria:"++asteroids;" match:True weight:1000 }	}

					{	test:'(tseAffinityCriteria
								"+++asteroids"
								"asteroids")								result:{ criteria:"+++asteroids;" match:True weight:1000 }	}

					{	test:'(tseAffinityCriteria
								"*asteroids"
								"asteroids")								result:{ criteria:"*asteroids;" match:True weight:1000 }	}

					{	test:'(tseAffinityCriteria
								"+asteroids"
								"planet")									result:{ criteria:"+asteroids;" match:Nil weight:500 }	}

					{	test:'(tseAffinityCriteria
								"++asteroids"
								"planet")									result:{ criteria:"++asteroids;" match:Nil weight:250 }	}

					{	test:'(tseAffinityCriteria
								"+++asteroids"
								"planet")									result:{ criteria:"+++asteroids;" match:Nil weight:100 }	}

					{	test:'(tseAffinityCriteria
								"*asteroids"
								"planet")									result:{ criteria:"*asteroids;" match:Nil weight:0 }	}

					{	test:'(tseAffinityCriteria
								"+asteroids"
								"asteroids" 20)								result:{ criteria:"+asteroids;" match:True weight:3000 }	}

					{	test:'(tseAffinityCriteria
								"++asteroids"
								"asteroids" 20)								result:{ criteria:"++asteroids;" match:True weight:4360 }	}

					{	test:'(tseAffinityCriteria
								"+++asteroids"
								"asteroids" 20)								result:{ criteria:"+++asteroids;" match:True weight:4800 }	}

					{	test:'(tseAffinityCriteria
								"*asteroids"
								"asteroids" 20)								result:{ criteria:"*asteroids;" match:True weight:5000 }	}

					{	test:'(tseAffinityCriteria
								"+asteroids"
								"planet" 20)								result:{ criteria:"+asteroids;" match:Nil weight:500 }	}

					{	test:'(tseAffinityCriteria
								"++asteroids"
								"planet" 20)								result:{ criteria:"++asteroids;" match:Nil weight:160 }	}

					{	test:'(tseAffinityCriteria
								"+++asteroids"
								"planet" 20)								result:{ criteria:"+++asteroids;" match:Nil weight:50 }	}

					{	test:'(tseAffinityCriteria
								"*asteroids"
								"planet" 20)								result:{ criteria:"*asteroids;" match:Nil weight:0 }	}

					{	test:'(tseAffinityCriteria
								"+asteroids|+planet"
								"planet")									result:{ criteria:"+asteroids; | +planet;" match:True weight:1000 }	}

					{	test:'(tseAffinityCriteria
								"++asteroids|++planet"
								"planet")									result:{ criteria:"++asteroids; | ++planet;" match:True weight:1000 }	}

					{	test:'(tseAffinityCriteria
								"+++asteroids|+++planet"
								"planet")									result:{ criteria:"+++asteroids; | +++planet;" match:True weight:1000 }	}

					{	test:'(tseAffinityCriteria
								"*asteroids|*planet"
								"planet")									result:{ criteria:"*asteroids; | *planet;" match:True weight:1000 }	}

					{	test:'(tseAffinityCriteria
								"+asteroids|+100"
								"asteroids")								result:{ criteria:"+asteroids=+100;" match:True weight:2000 }	}

					{	test:'(tseAffinityCriteria
								"+asteroids|+100|+planet=+100"
								"planet")									result:{ criteria:"+asteroids=+100; | +planet=+100;" match:True weight:2000 }	}

					;	CIntegerRangeCriteria

					{	test:'(tseParseIntegerRange "=1;")					result:{ equalTo:1 }	}
					{	test:'(tseParseIntegerRange "=15;")					result:{ equalTo:15 }	}
					{	test:'(tseParseIntegerRange "&gt;15;")				result:{ greaterThan:15 }	}
					{	test:'(tseParseIntegerRange "&gt;=15;")				result:{ greaterThan:14 }	}
					{	test:'(tseParseIntegerRange "&lt;5;")				result:{ lessThan:5 }	}
					{	test:'(tseParseIntegerRange "&lt;=5;")				result:{ lessThan:6 }	}
					{	test:'(tseParseIntegerRange "L:8")					result:{ equalTo:8 modifier:"L" }	}
					{	test:'(tseParseIntegerRange "L:1-9")				result:{ greaterThan:0 lessThan:10 modifier:"L" }	}
					{	test:'(tseParseIntegerRange "L:18-")				result:{ greaterThan:17 modifier:"L" }	}
					{	test:'(tseParseIntegerRange "&gt;#100")				result:{ greaterThan:100 modifier:"#" }	}
					{	test:'(tseParseIntegerRange "&gt;=#100")			result:{ greaterThan:99 modifier:"#" }	}
					
					;	CRegenDesc
					
					{	test:'(@ (tseRegenDesc 1 10) 'actualRegen)			result:1	}
					{	test:'(@ (tseRegenDesc 5 10) 'actualRegen)			result:5	}
					{	test:'(@ (tseRegenDesc 9 10) 'actualRegen)			result:9	}
					{	test:'(@ (tseRegenDesc 10 10) 'actualRegen)			result:10	}
					{	test:'(@ (tseRegenDesc 15 10) 'actualRegen)			result:15	}
					{	test:'(@ (tseRegenDesc 20 10) 'actualRegen)			result:20	}
					{	test:'(@ (tseRegenDesc 28 10) 'actualRegen)			result:28	}

					;	strPatternSubst

					{	test:'(tsePattern "Percent %%." 17)					result:"Percent %."	}
					{	test:'(tsePattern "Int %d." 17)						result:"Int 17."	}
					{	test:'(tsePattern "Hex %x." 0xf00d)					result:"Hex f00d."	}

					{	test:'(tsePattern "Entity: %&amp;amp;.")			result:"Entity: &amp;."	}
					)

					{
					})
			</OnGlobalStartDiagnostics>
		</Events>
	</Type>

</TranscendenceModule>
