<?xml version="1.0" ?>

<TranscendenceModule>

	<!-- Mission: Attack Sung transport and liberate slaves ====================

	EXTRA DATA

	reward:			Reward (in credits) for completing mission
	missionXP:		XP awarded for completing mission
	targetID:		ID of transport to destroy
	wreckID:		ID of wreck to dock with
	gateID:			ID of the gate where transport will arrive

	status:			Mission status:
		Nil:		Mission not yet started
		'intercept:	Player must intercept transport
		'rescue:	Player must dock and rescue slaves
		'returning:	Returning to station

	======================================================================== -->

	<MissionType UNID="&msHuariAttackConvoy;"
			name=			"Huari 01: Intercept Sung transport"
			attributes=		"huariEmpire, huariFortress"

			level=			"4-8"

			expireTime=			"5400"
			failureOnReturnToSystem="5400"
			>

		<StaticData>
			<Data id="convoy">
				(
					{
						id: "windEscort"
						minLevel: 4
						maxLevel: 6
						chance: 60

						principalType: Nil
						escortType: &scWindSlaver;
						escortCount: (random 8 10)
						}
					{
						id: "steelEscort"
						minLevel: 5
						maxLevel: 8
						chance: 30

						principalType: &scSteelSlaver;
						escortType: &scWindSlaver;
						escortCount: (random 3 6)
						}
					{
						id: "earthEscort"
						minLevel: 6
						maxLevel: 8
						chance: 10

						principalType: &scEarthSlaver;
						escortType: &scWindSlaver;
						escortCount: (random 1 4)
						}
					)
			</Data>
		</StaticData>

		<Image	imageID="&rsHuariFortress;" imageWidth="380" imageHeight="380"/>

		<Events>
			<OnCreate>
				(switch
					;	Must have befriended the Huari
					(!= (typGetData &svHuariEmpire; 'status) 'friend)
						(msnDestroy gSource)

					;	Create the mission
					(block (
						(stargates (sysFindObject Nil "G -uncharted;"))
						(sungStations (sysFindObject Nil "AT +sungSlavers; +populated; -uncharted;"))
						;	Get the list of valid mission variants
						(convoyDesc
							(filter (msnGetStaticData gSource 'convoy) theDesc
								(and (geq (sysGetLevel) (@ theDesc 'minLevel))
									(leq (sysGetLevel) (@ theDesc 'maxLevel))
									)
								)
							)
						(theRoll (random 1 (+ (map convoyDesc theDesc (@ theDesc 'chance)))))
						theEntry startPos endGate
						)
						;	Filter out any stations that don't have valid gates
						(setq sungStations (map sungStations 'excludeNil theObj
								(block (
									(gateList (filter stargates theGate 
											(and
												(geq (objGetDistance theObj theGate) 300)
												(geq (objGetDistance theObj theGate) (objGetDistance aOwnerObj theGate))
												)
											))
									)
									(if gateList (list theObj gateList))
									)
								))

						(if sungStations
							(block Nil
								(setq theEntry (random sungStations))
								(setq startPos (@ theEntry 0))
								(setq endGate (random (@ theEntry 1)))
								)

							;	Otherwise, pick a starting pos relative to the gate

							(block (
								(destObj (random stargates))
								(distToGate 300)

								;	Compute the angle from the gate to our station

								(angleToStation (sysVectorAngle (sysVectorSubtract aOwnerObj destObj)))

								;	Pick a random course angle (from the perspective of the destination)

								(courseAngle (mod 'degrees 
									(+ angleToStation 
										(* (random '(-1 1))	(random 30 60))
										)
									360
									))

								;	Pick a point a specific distance away from the destination along the course
								;	angle. This is the projected interception point; the distance away from
								;	the destination is proportional to the time that the player will have to
								;	destroy the transport.

								(interceptPos (sysVectorPolarOffset destObj courseAngle distToGate))

								;	Compute the time that it will take the player to reach the intercept
								;	position from the mission station.

								(playerTravelTime 
									(round (* 1.5
										(sysCalcTravelTime (sysVectorDistance interceptPos aOwnerObj) (shpGetMaxSpeed gPlayerShip))
										))
									)

								;	Compute the distance that the target will travel in that time

								(targetSpeed (typ@ &scSungTransport; 'maxSpeed))
								(freighterDist (sysCalcTravelDistance targetSpeed playerTravelTime))
								)
								(setq endGate destObj)
								(setq startPos
									(sysVectorPolarOffset endGate courseAngle (+ distToGate freighterDist))
									)
								)
							)

						(msnSetData gSource 'convoyDesc (match convoyDesc theDesc
							(ls (setq theRoll (- theRoll (@ theDesc 'chance))) 1)
							))
						(msnSetData gSource 'startPos startPos)
						(msnSetData gSource 'gateID (objGetID endGate))
						(msnSetData gSource 'slaveCount 17)
						(msnSetData gSource 'slavesLeft 17)
						(msnSetData gSource 'slaveCargo (itmSetData (itmCreate &itSlaveCoffin; 1) 'Huari True))

						(msnSetData gSource 'missionXP 75)
						)
					)
			</OnCreate>

			<OnAccepted>
				(msnRegisterForEvents gSource gPlayerShip)
			</OnAccepted>

			<OnStarted>
				(block (
					(gateObj (objGetObjByID (msnGetData gSource 'gateID)))
					(convoyDesc (msnGetData gSource 'convoyDesc))
					targetObj
					)
					;	Create the transport
					(setq targetObj (sysCreateShip &scSungTransport; (msnGetData gSource 'startPos) &svSung;))
					(objAddItem targetObj (msnGetData gSource 'slaveCargo) (msnGetData gSource 'slaveCount))
					(objSetIdentified targetObj)
					(objSetProperty targetObj 'alwaysLeaveWreck True)

					(shpOrder targetObj 'wait Nil 5)
					(shpOrder targetObj 'gate gateObj)
					
					(msnSetData gSource 'targetID (objGetID targetObj))
					(msnRegisterForEvents gSource targetObj)

					;	Create escorts
					(if (@ convoyDesc 'principalType)
						(block (escortObj)
							(setq escortObj (sysCreateShip (@ convoyDesc 'principalType) targetObj &svSung;))
							(shpOrder escortObj 'escort targetObj)
							)
						)

					(for i 1 (eval (@ convoyDesc 'escortCount))
						(block (escortObj)
							(setq escortObj (sysCreateShip (@ convoyDesc 'escortType) targetObj &svSung;))
							(shpOrder escortObj 'escort targetObj)
							)
						)

					;	Intercept
					(msnSetData gSource 'status 'intercept)
					)
			</OnStarted>

			<OnObjDestroyed>
				(switch
					;	Transport destroyed
					(= (objGetID aObjDestroyed) (msnGetData gSource 'targetID))
						(switch
							;	If the target left no wreck, then we're done
							(not aWreckObj)
								(msnFailure gSource)

							(block Nil
								(msnSetData gSource 'wreckID (objGetID aWreckObj))
								(msnRegisterForEvents gSource aWreckObj)
								(msnSetData gSource 'status 'rescue)
								(msnSetPlayerTarget gSource)
								)
							)

					;	Wreck destroyed
					(and (= (objGetID aObjDestroyed) (msnGetData gSource 'wreckID))
							(objHasItem aObjDestroyed (msnGetData gSource 'slaveCargo))
							)
						(msnFailure gSource)
					)
			</OnObjDestroyed>

			<OnObjEnteredGate>
				(switch
					(= (objGetID aObj) (msnGetData gSource 'targetID))
						(msnFailure gSource)
					)
			</OnObjEnteredGate>

			<OnObjDocked>
				(switch
					;	Player docks with station
					(and gPlayerShip (= aObjDocked gPlayerShip)
							(= (objGetID aDockTarget) (msnGetProperty gSource 'ownerID))
							(= (msnGetData gSource 'status) 'returning)
							)
						(block (
							(slavesLeft (msnGetData gSource 'slavesLeft))
							(slaveCargo (msnGetData gSource 'slaveCargo))
							(wreckObj (objGetObjByID (msnGetData gSource 'wreckID)))
							)
							(switch
								;	Player returns with all slaves
								(objHasItem gPlayerShip slaveCargo slavesLeft)
									(block Nil
										(objRemoveItem gPlayerShip slaveCargo slavesLeft)
										(msnSuccess gSource)
										)

								;	Slaves are still on wreck
								(and wreckObj (objHasItem wreckObj slaveCargo))
									Nil	;	LATER: Remind the player to rescue the slaves

								;	Otherwise failure
								(msnFailure gSource)
								)
							)

					;	If the transport docks then fail the mission
					(= (objGetID aObjDocked) (msnGetData gSource 'targetID))
						(msnFailure gSource)
					)
			</OnObjDocked>

			<OnSetPlayerTarget>
				(switch
					(= (msnGetData gSource 'status) 'intercept)
						(rpgSetTarget gSource aReason (objGetObjByID (msnGetData gSource 'targetID)) 'attack)

					(= (msnGetData gSource 'status) 'rescue)
						(rpgSetTarget gSource aReason (objGetObjByID (msnGetData gSource 'wreckID)) 'dock)

					(rpgSetTarget gSource aReason (objGetObjByID (msnGetProperty gSource 'ownerID)) 'dock)
					)
			</OnSetPlayerTarget>

			<OnUpdate>
				(block (
					(status (msnGetData gSource 'status))
					)
					(switch
						(and (= status 'rescue)
								(objHasItem gPlayerShip (msnGetData gSource 'slaveCargo))
								)
							(block Nil
								(msnSetData gSource 'status 'returning)
								(msnSetPlayerTarget gSource)
								)
						)
					)
			</OnUpdate>

			<OnInProgressUndock>
				(block (
					(slaveCargo (msnGetData gSource 'slaveCargo))
					(slavesOnBoard (objHasItem gPlayerShip slaveCargo))
					)
					(if slavesOnBoard
						(block ()
							(objRemoveItem gPlayerShip slaveCargo slavesOnBoard)
							(msnIncData gSource 'slavesLeft (- slavesOnBoard))

							(msnSetData gSource 'status 'rescue)
							(msnSetPlayerTarget gSource)
							)
						)
					)
			</OnInProgressUndock>

			<OnReward>
				(typIncData &svHuariEmpire; 'xp (msnGetData gSource 'missionXP))
			</OnReward>

			<OnCompleted>
				(switch
					(and (= aReason 'failure)
							(geq (count (msnFind "r +huariFortress; +property:isFailure;")) 2)
							)
						(typSetData &svHuariEmpire; 'status 'loser)
					)
			</OnCompleted>

			<OnGetNextScreen>
				(if (and (= aScreenType 'FailureFollowUp)
						(= (typGetData &svHuariEmpire; 'status) 'loser)
						)
					{
						nextScreen: &dsRPGMessage;
						nextScreenData: {
							desc: (typTranslate &stHuariFortress; 'huari.Blacklisted)
							}
						}
					)
			</OnGetNextScreen>
		</Events>

		<Language>
			<!-- Code Points -->

			<Text id="Summary">
				(cat
					(msnTranslate gSource 'textSummary)
					"\n\n"
					(typTranslate &dsRPGMission; 'mission.rewardSummary {
						systemName: (sysGetName)
						payment: (fmtCurrency 'credit (msnGetData gSource 'reward))
						})
					)
			</Text>
			<Text id="Intro">
				(hua_calcIntro gSource)
			</Text>

			<!-- Text -->

			<Text id="Name">Intercept Sung transport</Text>
			<Text id="textSummary">

				Intercept a Sung transport and liberate the slaves held onboard.

			</Text>
			<Text id="Briefing">

				"By the mercy of the Light we've learned the course and schedule of a slave
				ship carrying our brethren. You can free our citizens by attacking the
				transport and returning its living cargo to us.

				"Will you help us, %brother%?"

			</Text>
			<Text id="AcceptReply">

				"We've programmed the slave ship's coordinates into your ship's computer.
				Go with the Light!"

			</Text>
			<Text id="DeclineReply">

				"Let the will of the Light be done, though we cannot understand
				His methods."

			</Text>
			<Text id="InProgress">
				(block (
					(slaveCargo (msnGetData gSource 'slaveCargo))
					(slavesInCargo (objHasItem gPlayerShip slaveCargo))
					(slavesLeft (- (msnGetData gSource 'slavesLeft) slavesInCargo))
					)
					(switch
						(and slavesInCargo (= slavesLeft 1))
							(msnTranslate gSource 'descInProgress.oneSlaveLeft)

						slavesInCargo
							(msnTranslate gSource 'descInProgress.someSlavesLeft {
								slavesLeft: slavesLeft
								})

						(msnTranslate gSource 'descInProgress)
						)
					)
			</Text>
			<Text id="FailureDebrief">

				"Your failure is also our doom. Maybe we were never meant to bask in the
				Light's blessings; maybe the darkness of space will consume us after all."

			</Text>
			<Text id="SuccessDebrief">

				"By the blessed Light, you have succeeded where none dared hope!
				We are all grateful for rescuing our poor brothers and sisters.
				The Sung use slaves to develop their technologies. Thousands and
				thousands of human minds number-crunching inside their steel coffins.
				You have saved them from a horrific experience."

			</Text>

			<Text id="descInProgress">

				"By all the Light's mercy, what are you doing here?
				Your task remains uncompleted."

			</Text>
			<Text id="descInProgress.oneSlaveLeft">

				"By the enduring Light, you've brought most of our brethren 
				back!
				
				"But there's still one coffin out there and you need to bring 
				it back!"

			</Text>
			<Text id="descInProgress.someSlavesLeft">

				"By the enduring Light, you've brought some of our brethren 
				back!
				
				"But where are the others? You didn't leave them on that slave 
				ship, did you? There are still %slavesLeft% coffins out there
				and you need to bring them back!"

			</Text>
		</Language>
	</MissionType>

</TranscendenceModule>
