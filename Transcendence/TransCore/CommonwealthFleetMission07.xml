<?xml version="1.0" ?>

<TranscendenceModule>

	<!-- Mission: Refugee Convoy ===============================================

	EXTRA DATA

	reward:			Reward (in credits) for completing mission
	missionXP:		XP awarded for completing mission
	freighterID:	The freighter to destroy
	gate1ID:		ID of the entry gate
	gate2ID:		ID of the exit gate
	principleList:	IDs of the super-freighters
	secondaryList:	IDs of the E-100 freighters
	wingmenLeft:	Number of wingmen who survived the mission

	status:			Mission status:
		Nil:		Convoy has not arrived
		inbound:	Convoy has arrived

	======================================================================== -->

	<MissionType UNID="&msCSCRefugeeConvoy;"
			name=			"Commonwealth Fleet 07: Refugee Convoy"
			attributes=		"commonwealthFleet, cscTaskForce, rank3"

			level=			"5-10"

			expireTime=			"5400"
			failureOnReturnToSystem="5400"
			>

		<Image imageID="&rsFleetEmblems;" imageX="960" imageY="480"	imageWidth="320" imageHeight="240"/>

		<StaticData>
			<Data id="convoy">
				(
					{	principalType: &tbCSCRefugeeConvoyPrincipal;	escortTypes: (&tbCSCRefugeeConvoyEscort; &tbCSCRefugeeConvoyEscort; &tbCSCRefugeeConvoyEscort;) }
					{	principalType: &tbCSCRefugeeConvoyPrincipal;	escortTypes: (&tbCSCRefugeeConvoyEscort; &tbCSCRefugeeConvoyEscort; &tbCSCRefugeeConvoyEscort;) }
					{	principalType: &tbCSCRefugeeConvoyPrincipal;	escortTypes: (&tbCSCRefugeeConvoyEscort; &tbCSCRefugeeConvoyEscort;) }
					)
			</Data>
		</StaticData>

		<Events>
			<OnCreate>
				(block (
					(gate2 (intGetGateToSystem gSource "SK"))
					(gate1 (sysFindObject gate2 "GR -uncharted;"))
					)

					(switch
						;	Stargates must be at least 150 light-seconds from each other
						(ls (objGetDistance gate1 gate2) 150)
							(msnDestroy gSource)

						;	Create the mission
						(block Nil
							(msnSetData gSource 'gate1ID (objGetID gate1))
							(msnSetData gSource 'gate2ID (objGetID gate2))

							(msnSetData gSource 'missionXP 250)
							)
						)
					)
			</OnCreate>

			<OnStarted>
				(block (
					(cscObj (objGetObjByID (msnGetProperty gSource 'ownerID)))
					(gateObj (objGetObjByID (msnGetData gSource 'gate1ID)))
					(travelTime (sysCalcTravelTime (objGetDistance cscObj gateObj) (shpGetMaxSpeed gPlayerShip)))
					)

					(msnAddTimerEvent gSource (+ travelTime (random 200 300)) 'OnConvoyArrives)
					)
			</OnStarted>

			<OnAcceptedUndock>
				(block Nil
					(objSetIdentified (objGetObjByID (msnGetData gSource 'gate1ID)))
					(objSetIdentified (objGetObjByID (msnGetData gSource 'gate2ID)))

					;	Create wingmen for the mission
					(intFleetCreateWingmen gSource 6 &scCenturionM;)
					)
			</OnAcceptedUndock>

			<OnObjDestroyed>
				(block (
					(principleList (msnGetData gSource 'principleList))
					(secondaryList (msnGetData gSource 'secondaryList))
					(iPrinciple (find principleList (objGetID aObjDestroyed)))
					(iSecondary (find secondaryList (objGetID aObjDestroyed)))
					)

					;	Update the escort lists
					(msnSetData gSource 'principleList (lnkRemove principleList iPrinciple))
					(msnSetData gSource 'secondaryList (lnkRemove secondaryList iSecondary))

					(switch
						(= aDestroyReason 'enteredStargate)
							Nil

						iPrinciple
							(block Nil
								(plyMessage gPlayer (objGetName aObjDestroyed 1) " destroyed")
								(msnIncData gSource 'principleDestroyed)
								(msnSetPlayerTarget gSource)
								)

						iSecondary
							(block Nil
								(plyMessage gPlayer (objGetName aObjDestroyed 1) " destroyed")
								(msnIncData gSource 'secondaryDestroyed)
								)
						)

					(switch
						;	If we've still got ships, then the mission continues

						(or principleList secondaryList)
							Nil

						;	If we've lost too many ships then failure

						(or	(gr (msnGetData gSource 'principleDestroyed) 1)
							(gr (msnGetData gSource 'secondaryDestroyed) 4)
							)
							(msnFailure gSource)

						;	Otherwise, success!

						(msnSuccess gSource)
						)
					)
			</OnObjDestroyed>

			<OnConvoyArrives>
				(block (
					(cscObj (objGetObjByID (msnGetProperty gSource 'ownerID)))
					(gate1 (objGetObjByID (msnGetData gSource 'gate1ID)))
					(gate2 (objGetObjByID (msnGetData gSource 'gate2ID)))
					(convoyDesc (msnGetStaticData gSource 'convoy))
					(countWaves (count convoyDesc))
					principleList secondaryList travelTime timeStep
					)
					(plyMessage gPlayer "Convoy has arrived!")

					;	Create the convoy
					(enum convoyDesc convoyEntry
						(block (shipObj)
							(setq shipObj (sysCreateShip (@ convoyEntry 'principalType) gate1 &svCommonwealth;))
							(objSetData shipObj 'noPiracyCheck True)
							(shpOrder shipObj 'gate gate2)
							(msnRegisterForEvents gSource shipObj)
							(lnkAppend principleList shipObj)

							;	Faster freighters escort the slower ones so they stay together
							(enum (@ convoyEntry 'escortTypes) theType
								(block (escortObj)
									(setq escortObj (sysCreateShip theType gate1 &svCommonwealth;))
									(objSetData escortObj 'noPiracyCheck True)
									(shpOrder escortObj 'follow shipObj)
									(shpOrder escortObj 'gate gate2)
									(msnRegisterForEvents gSource escortObj)
									(lnkAppend secondaryList escortObj)
									)
								)
							)
						)

					;	Register for events from all freighters
					(msnSetData gSource 'principleList (map principleList theShip (objGetID theShip)))
					(msnSetData gSource 'secondaryList (map secondaryList theShip (objGetID theShip)))

					;	Calculate travel time from first ship
					(setq travelTime (sysCalcTravelTime (objGetDistance gate1 gate2) (shpGetMaxSpeed (@ principleList 0))))
					(setq timeStep (/ travelTime (* countWaves 4)))

					;	On timer, enemies attack
					(for i 0 (- countWaves 1)
						(sysAddEncounterEventAtDist 
							(* timeStep (+ (* i 4) (random 1 3)))
							(if (= (random 1 3) 1) gPlayerShip (@ principleList i))
							&tbCSCRefugeeConvoyAmbush; 
							(random 120 200)
							)
						)

					;	Update status and player target
					(msnSetData gSource 'status 'inbound)
					(msnSetPlayerTarget gSource)
					)
			</OnConvoyArrives>

			<OnSetPlayerTarget>
				(switch
					(not (msnGetData gSource 'status))
						(rpgSetTarget gSource aReason (objGetObjByID (msnGetData gSource 'gate1ID)) 'dock)

					(rpgSetTarget gSource aReason (objGetObjByID (@ (msnGetData gSource 'principleList) 0)) 'escort)
					)
			</OnSetPlayerTarget>

			<OnCanDebrief>
				(block Nil
					;	Wingmen leave
					(msnSetData gSource 'wingmenLeft (intFleetDisperseWingmen gSource))
					Nil
					)
			</OnCanDebrief>

			<OnReward>
				(commFleet_GiveReward gSource)
			</OnReward>
		</Events>

		<Language>
			<Text id="Name">
				Escort Refugee Convoy
			</Text>
			<Text id="Summary">
				(msnTranslate gSource 'textSummary {
					systemName: (sysGetName)
					payment: (fmtCurrency 'credit (msnGetData gSource 'reward))
					})
			</Text>
			<Text id="textSummary">
				Escort a refugee convoy passing through the system.

				System: %systemName%\n
				Payment: %payment%
			</Text>
			<Text id="Intro">

				The XO walks up to you.

				"Good to see you pilot. We've got a mission for you."

			</Text>
			<Text id="Briefing">

				"A refugee convoy is passing through the system. Your mission is to
				lead a small squadron and escort the convoy safely through the system.
				Any questions?"

			</Text>
			<String id="AcceptReply">
				"Good luck, %name%!"
			</String>
			<String id="DeclineReply">
				"Get the hell out of here then!"
			</String>

			<String id="InProgress">
				"What is your major malfunction!? Get back out there and complete your mission!"
			</String>
			<String id="FailureDebrief">
				
				"Pathetic! Those refugees were counting on us to protect them!
				Now they'll start their new life with a bunch of funerals.

				"Get out of here, pilot!"

			</String>
			<String id="SuccessDebrief">
				"Outstanding mission! Those refugees have a chance to start a new life away from the war zone."
			</String>
		</Language>
	</MissionType>

<!-- TABLES -->

	<ShipTable unid="&tbCSCRefugeeConvoyPrincipal;">
		<LevelTable>
			<!--
				NOTE: For now we only handle one freighter type because if we
				don't have the same freighter for all 3 groups, then they
				start to separate (because they proceed at different speeds).
				
				In the future we should have a function that just returns the
				ship class from a table and use that for all three groups.
			-->

			<Ship levelFrequency="vvvrc cuurv" count="1" class="&scScarabFreighter;"/>
		</LevelTable>
	</ShipTable>
	
	<ShipTable unid="&tbCSCRefugeeConvoyEscort;">
		<LevelTable>
			<Ship levelFrequency="vrccu urv--" count="1" class="&scEI200;"/>
			<Ship levelFrequency="--rcc uurv-" count="1" class="&scEI500;"/>
			<Ship levelFrequency="---rc cuurv" count="1" class="&scArmstrongTransport;"/>
		</LevelTable>
	</ShipTable>
	
	<ShipTable unid="&tbCSCRefugeeConvoyAmbush;">
		<LevelTable>
			<Ship levelFrequency="vvvrc rv---"	count="1d2+2"	class="&scSandstorm;"	orders="attack"	sovereign="&svAres;"/>
			<Ship levelFrequency="----r crv--"	count="1d4+2"	class="&scSandstorm;"	orders="attack"	sovereign="&svAres;"/>
			<Ship levelFrequency="----- rcrv-"	count="2d6"		class="&scSandstorm;"	orders="attack"	sovereign="&svAres;"/>
			<Ship levelFrequency="----- -rcrv"	count="3d6"		class="&scSandstorm;"	orders="attack"	sovereign="&svAres;"/>
			<Ship levelFrequency="----- -rcrv"	count="1"		class="&scTundra;"		orders="attack"	sovereign="&svAres;">
				<Escorts>
					<Ship						count="1d6"		class="&scSandstorm;"	orders="escort"	sovereign="&svAres;"/>
				</Escorts>
			</Ship>
			<Ship levelFrequency="----- --rcr"	count="2"		class="&scTundra;"		orders="attack"	sovereign="&svAres;">
				<Escorts>
					<Ship						count="1d6"		class="&scSandstorm;"	orders="escort"	sovereign="&svAres;"/>
				</Escorts>
			</Ship>
			<Ship levelFrequency="----- ---rc"	count="1"		class="&scChasm;"		orders="attack"	sovereign="&svAres;">
				<Escorts>
					<Ship						count="1d6"		class="&scSandstorm;"	orders="escort"	sovereign="&svAres;"/>
				</Escorts>
			</Ship>
		</LevelTable>
	</ShipTable>
	
</TranscendenceModule>
