<?xml version="1.0" encoding="utf-8"?>

<TranscendenceModule>

	<!-- Mission: Rescue Mining Ship ===========================================

	EXTRA DATA

	reward:			Reward (in credits) for completing mission
	targetID:		Id of ship to rescue
	targetCount:	Number of raiders to destroy

	playerHelped:	True if the player destroyed any raiders
	playerArrived:	True if the player saw the captured miner

	state:			Current state of mission
			Nil:		Not yet started
			rescue:		Heading out to rescue miner
			returning:	Returning to station

	======================================================================== -->

	<MissionType UNID="&msSaveMiningShip;"
			name=				"Rescue Mining Ship"
			attributes=			"commonwealthMining"

			level=				"1-5"

			expireTime=			"5400"
			failureAfterOutOfSystem="5400"
			>

		<StaticData>
			<Data id="encounter">
				(
					{	}
					{	min:2	max:3	raiderTypes: (&scCentauriRaider;) }
					{	min:3	max:4	raiderTypes: (&scCentauriRaider; &scCentauriRaider; &scCentauriHeavyRaider;) }
					{	min:4	max:6	raiderTypes: (&scCentauriRaider; &scCentauriRaider; &scCentauriHeavyRaider;) }
					{	min:6	max:8	raiderTypes: (&scCentauriRaider; &scCentauriRaider; &scCentauriHeavyRaider;) }
					)
			</Data>
		</StaticData>

		<Events>
			<OnCreate>
				(block Nil
					(switch
						;	Reduce chance of mission if player has already completed one
						(and (msnFind Nil "r +commonwealthMining;")
								(ls (random 1 100) 33))
							(msnDestroy gSource)

						;	Set the reward
						(msnSetData gSource 'reward (+ 100 (* 100 (sysGetLevel))))
						)
					)
			</OnCreate>

			<OnAccepted>
				(block (
					(stationObj (objGetObjByID (msnGetProperty gSource 'ownerID)))

					;	Find an appropriate asteroid
					(asteroidList
						(filter
							(subset (shuffle (sysFindObject stationObj "t +asteroid; R:60;")) 0 20)
							asteroidObj
							(not (sysFindObject asteroidObj "T +populated; N:60;"))
							)
						)

					;	Find a location for the mining ship. If we could not find an asteroid, pick a random location
					(centerPos (if asteroidList
						(random asteroidList)
						(sysVectorRandom stationObj (random 180 300) 60 "T +populated;")
						))

					;	Get encounter options based on level
					(encounterEntry (@ (msnGetStaticData gSource 'encounter) (sysGetLevel)))

					;	Number of warlords is based on system level
					(targetCount (random (@ encounterEntry 'min) (@ encounterEntry 'max)))

					shipObj
					)

					;	Create the captured mining ship
					(setq shipObj
						(sysCreateShip
							&scBorer;
							(sysVectorRandom centerPos (random 15 30) 15 "T")
							&svCommonwealth;
							)
						)
					(objEnumItems shipObj "dI" theDevice (objSetItemProperty shipObj theDevice 'enabled Nil))
					(shpOrder shipObj 'waitForTarget gPlayerShip 50)
					(shpOrder shipObj 'fireEvent gSource 'OnPlayerArrived)
					(shpOrder shipObj 'wait)
					(objSetIdentified shipObj)
					(msnRegisterForEvents gSource shipObj)
					(msnSetData gSource 'targetID (objGetID shipObj))

					;	Place warlords
					(msnSetData gSource 'targetCount targetCount)
					(for i 1 targetCount
						(block (raiderObj)
							(setq raiderObj (sysCreateShip (random (@ encounterEntry 'raiderTypes)) shipObj &svCentauriWarlords;))

							(shpOrder raiderObj 'patrol shipObj 5)
							(objSetData raiderObj "00101001_Warlord" True)
							(msnRegisterForEvents gSource raiderObj)
							)
						)

					;	Set mission status
					(msnSetData gSource 'state 'rescue)
					)
			</OnAccepted>

			<OnSetPlayerTarget>
				(rpgSetTarget gSource aReason (objGetObjByID (msnGetData gSource 'targetID)) 'escort)
			</OnSetPlayerTarget>

			<OnObjDestroyed>
				(switch
					(= (objGetID aObjDestroyed) (msnGetData gSource 'targetID))
						(msnFailure gSource)

					(objGetData aObjDestroyed "00101001_Warlord")
						(block Nil
							(if (and gPlayerShip (= aOrderGiver gPlayerShip))
								(msnSetData gSource 'playerHelped True)
								)
							(if (leq (msnIncData gSource 'targetCount -1) 0)
								(msnFireEvent gSource 'OnSetFree)
								)
							)
					)
			</OnObjDestroyed>

			<OnPlayerArrived>
				(block (
					(stationObj (objGetObjByID (msnGetProperty gSource 'ownerID)))
					(targetObj (objGetObjByID (msnGetData gSource 'targetID)))
					)
					(msnSetData gSource 'playerArrived True)
					(objSendMessage gPlayerShip targetObj (msnTranslate gSource (cat "msgHelp:" (random 1 4))))
					)
			</OnPlayerArrived>

			<OnSetFree>
				(block (
					(stationObj (objGetObjByID (msnGetProperty gSource 'ownerID)))
					(targetObj (objGetObjByID (msnGetData gSource 'targetID)))
					)
					(switch
						(not targetObj)
							Nil
							
						(block ()
						
							;	Enable all devices
							(objEnumItems targetObj "dI" theDevice (objSetItemProperty targetObj theDevice 'enabled True))

							;	Order the ship to return
							(shpCancelOrders targetObj)
							(shpOrder targetObj 'wait Nil (random 2 4))
							(shpOrder targetObj 'dock stationObj)
							(shpOrder targetObj 'fireEvent gSource 'OnReturnedToStation)
							(shpOrder targetObj 'wait Nil (random 6 12))
							(shpOrder targetObj 'gate)

							(if (msnGetData gSource 'playerHelped)
								(objSendMessage gPlayerShip targetObj (msnTranslate gSource (cat "msgFree:" (random 1 4))))
								)

							(msnSetData gSource 'state 'returning)
							)
						)
					)
			</OnSetFree>

			<OnReturnedToStation>
				(msnSuccess gSource)
			</OnReturnedToStation>

			<OnReward>
				(rpgMissionRewardPayment (msnGetData gSource 'reward))
			</OnReward>
		</Events>

		<Language>
			<Text id="Name">
				Rescue Mining Ship
			</Text>
			<Text id="Summary">
				(msnTranslate gSource 'textSummary {
					stationName: (objGetName (objGetObjByID (msnGetProperty gSource 'ownerID)))
					systemName: (sysGetName)
					payment: (fmtCurrency 'credit (msnGetData gSource 'reward))
					})
			</Text>
			<Text id="textSummary">
				
				Centauri warlords have captured a mining ship from %stationName%.
				Your mission is to destroy the warlords and rescue the mining ship.

				System: %systemName%\n
				Payment: %payment%
				
			</Text>
			
			<!-- INTRO -->
			
			<Text id="FirstIntro">
				(msnTranslate gSource 'textFirstIntro {
					stationName: (objGetName (objGetObjByID (msnGetProperty gSource 'ownerID)))
					})
			</Text>
			<Text id="textFirstIntro">
				
				The meeting hall is carved deep below the asteroid's surface. The colony supervisor stands
				on a platform in the center, surrounded by comms equipment and visual displays.
				He turns his attention towards you as you approach:

				"Welcome to %stationName%! I saw your ship on my displays; she looks like she's armed for combat.
				How about taking on a mission for us? We could use the help, and there would be payment."

			</Text>
			<Text id="Intro">
				(msnTranslate gSource (random (list 'descSupervisor1 'descSupervisor2 'descSupervisor3)) {
					stationName: (objGetName (objGetObjByID (msnGetProperty gSource 'ownerID)))
					})
			</Text>
			<Text id="descSupervisor1">
				
				The colony supervisor stands at the center plugged in to his consoles and display.
				He turns his attention towards you as you approach:
				
				"Welcome to %stationName%! If you're looking for work, I might be able to set you up with something."
				
			</Text>
			<Text id="descSupervisor2">
				
				The colony supervisor stands at his station, surveying the status on his displays.
				He turns his attention towards you as you approach:
				
				"Welcome, %name%! We have another mission for you, if you're interested."
				
			</Text>
			<Text id="descSupervisor3">
				
				The colony supervisor stands at the center, his hands conducting the consoles and displays.
				He turns his attention towards you as you approach:
				
				"Welcome, %name%! Are you interested in flying a mission for us? There would be payment, of course."
				
			</Text>
			
			<!-- BRIEFING -->

			<Text id="Briefing">
				(msnTranslate gSource 'textBriefing {
					reward: (fmtCurrency 'credit (msnGetData gSource 'reward))
					})
			</Text>
			<Text id="textBriefing">

					"Centauri warlords have captured one of our mining ships in this system.
					We want you to go out there and destroy the raiders that have captured the ship.
					We'll pay you %reward% if you succeed.

					"Do we have a deal?"

			</Text>
			<Text id="AcceptReply">

				"We're agreed then. We'll program the miner's location into 
				your ship's computer. Just follow your directional indicator and 
				you'll get there. Good luck!"

			</Text>
			<String id="DeclineReply">
				"Ah, Hell! What are you doing here then? Stop wasting my time!"
			</String>
			<Text id="InProgress">

				"What's wrong? Are those warlords too tough for you? Get back 
				out there and finish the job!"

			</Text>

			<Text id="SuccessDebrief">
				(msnTranslate gSource 'textSuccessDebrief {
					payment: (fmtCurrency 'credit (msnGetData gSource 'reward))
					})
			</Text>
			<Text id="textSuccessDebrief">

				"Great work! Maybe the warlords will think twice before attacking us again.
				We've deposited %payment% to your account."

			</Text>
			<Text id="FailureDebrief">

				"You've let us all down! We thought you could handle a few 
				warlords; I guess we were wrong."

			</Text>
			<Text id="SuccessMsg">
				Mission complete!
			</Text>

			<Text id="msgHelp:1">Mayday mayday mayday! We're under attack!</Text>
			<Text id="msgHelp:2">Over here! Help us, please!</Text>
			<Text id="msgHelp:3">Hostiles in the area! Approach with caution!</Text>
			<Text id="msgHelp:4">Mayday mayday mayday! Hostiles in the area!</Text>

			<Text id="msgFree:1">You're my savior! I owe you one, buddy.</Text>
			<Text id="msgFree:2">Kacking Centaurians! Can you believe this? Thanks for taking care of them for us!</Text>
			<Text id="msgFree:3">We're OK! Thanks for blasting the Centaurians!</Text>
			<Text id="msgFree:4">Nice shooting! Those bastards got what was coming to them!</Text>
		</Language>
	</MissionType>

</TranscendenceModule>
