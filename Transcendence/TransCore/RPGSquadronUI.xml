<?xml version="1.0" encoding="utf-8"?>

<TranscendenceModule>

<!-- Squadron Management UI -->

	<DockScreen unid="&dsRPGSquadron;"
			inherit=		"&dsDockScreenBase;"
			nestedScreen=	"true"
			>
		<Display type="iconList">
			<OnDisplayInit>
				(map (obj@ gPlayerShip 'squadron) theEntry
					(block (
						(shipObj (@ theEntry 'obj))
						)
						{
							title: (@ theEntry 'name)
							icon: (objGetImageDesc shipObj)

							status: (@ theEntry 'status)
							obj: (@ theEntry 'obj)
							objID: (@ theEntry 'objID)
							type: (@ theEntry 'type)
							}
						)
					)
			</OnDisplayInit>
		</Display>

		<Panes>
			<Default>
				<OnPaneInit>
					(block (
						(squadronList (scrGetList gScreen))
						(entry (scrGetListEntry gScreen))

						(deployedCount (map squadronList 'reduceSum theEntry
							(if (= (@ theEntry 'status) 'deployed) 1)
							))

						(selection
							(switch
								(= (typeof entry) 'struct)
									(list entry)

								entry
								)
							)
						(selectionDeployed (filter selection theEntry
							(= (@ theEntry 'status) 'deployed)
							))

						(deployedObjs
							(switch
								(= (count selection) (count selectionDeployed))
									(map selection theEntry
										(@ theEntry 'obj)
										)
								)
							)

						(actionPos -1)
						(nextActionPos (lambda () (setq actionPos (+ actionPos 1))))
						)
						(switch

							;	If nothing is selected, then we show commands that
							;	apply to the whole squadron.

							(not entry)
								(block (
									(squadronComms (obj@ gPlayerShip 'squadronCommsStatus))

									(addAction (lambda (msgID)
										(scrAddAction gScreen msgID (nextActionPos) Nil
											(lambda ()
												(block ()
													(objSquadronComms gPlayerShip 'squadron msgID)
													(scrExitScreen gScreen 'forceUndock)
													)
												)
											)
										))
									)
									;	Add squadon orders

									(if (find squadronComms 'msgAttackTarget)
										(addAction 'msgAttackTarget)
										)

									(if (find squadronComms 'msgBreakAndAttack)
										(addAction 'msgBreakAndAttack)
										)

									(if (find squadronComms 'msgAttackInFormation)
										(addAction 'msgAttackInFormation)
										)

									(if (find squadronComms 'msgFormUp)
										(addAction 'msgFormUp)
										)

									(if (find squadronComms 'msgSetFormation)
										(block ()
											(addAction 'msgFormationAlpha)
											(addAction 'msgFormationBeta)
											(addAction 'msgFormationGamma)
											)
										)

									(if (find squadronComms 'msgWait)
										(addAction 'msgWait)
										)

									;	Set the descriptor

									(switch
										(gr deployedCount 0)
											(scrSetDescTranslate gScreen 'descSquadronDeployed {
												shipCount: (fmtNoun (scrTranslate gScreen 'nounShip) deployedCount 'countAlways)
												})

										(scrSetDescTranslate gScreen 'descNoSquadron)
										)
									)

							;	If we have only deployed objects selected, then we show
							;	commands that apply to the selection.

							deployedObjs
								(block (
									(squadronComms (objSquadronCommsMessages gPlayerShip deployedObjs))
									(skipList '(msgFormationAlpha msgFormationBeta msgFormationGamma msgStatus))

									;	Generate a list of messages

									(squadronActions
										(sort
											(map squadronComms 'excludeNil msgID
												(if (not (find skipList msgID))
													{
														msgID: msgID
														label: (objTranslate (@ deployedObjs 0) (cat "action." msgID))
														}
													)
												)
											'label
											)
										)

									objName objNameGeneric
									)

									;	If we only have a single object, then add an action to view
									;	configuration.

									(if (= (count deployedObjs) 1)
										(scrAddAction gScreen 'actionShowConfiguration (nextActionPos) Nil
											(lambda ()
												(scrShowScreen gScreen (obj@ (@ deployedObjs 0) 'shipConfigScreen) {
													shipObj: (@ deployedObjs 0)
													shipConfig: True
													})
												)
											)
										)

									;	Add commands

									(enum squadronActions theEntry
										(block (
											(msgID (@ theEntry 'msgID))
											(label (@ theEntry 'label))
											)
											(scrAddAction gScreen msgID (nextActionPos) label
												(lambda ()
													(block ()
														(objSquadronComms gPlayerShip deployedObjs msgID)
														(scrExitScreen gScreen 'forceUndock)
														)
													)
												)
											)
										)

									;	Set the descriptor

									(switch
										(gr (count deployedObjs) 1)
											(scrSetDescTranslate gScreen 'descShipsSelected {
												shipCount: (fmtNoun (scrTranslate gScreen 'nounShip) (count deployedObjs) 'countAlways)
												})

										(!= (setq objName (objGetName (@ deployedObjs 0)))
												(setq objNameGeneric (objGetName (@ deployedObjs 0) 'generic))
												)
											(scrSetDescTranslate gScreen 'descCharacterSelected {
												name: objName
												shipClass: (objGetName (@ deployedObjs 0) '(article generic))
												})

										(scrSetDescTranslate gScreen 'descShipSelected {
											shipClass: objNameGeneric
											})
										)

									(dbgOutput "Selection: " selection)
									(dbgOutput "Name: " (objGetname (@ deployedObjs 0)))
									(dbgOutput "Class: " (objGetName (@ deployedObjs 0) 'generic))
									)

							(scrSetDesc gScreen "LATER: " entry)
							)
						)
				</OnPaneInit>
				<Actions>

					<Action id="actionDone" cancel="1">
						(scrExitScreen gScreen)
					</Action>
				</Actions>
			</Default>
		</Panes>

		<Language>
			<Text id="actionShowConfiguration">[C]onfiguration</Text>

			<Text id="msgAttackInFormation">Attack [i]n Formation</Text>
			<Text id="msgAttackTarget">[A]ttack Target</Text>
			<Text id="msgBreakAndAttack">[B]reak &amp; Attack</Text>
			<Text id="msgFormUp">[F]orm Up</Text>
			<Text id="msgFormationAlpha">Formation [1] Alpha</Text>
			<Text id="msgFormationBeta">Formation [2] Beta</Text>
			<Text id="msgFormationGamma">Formation [3] Gamma</Text>
			<Text id="msgWait">[W]ait</Text>

			<Text id="descSquadronDeployed">
			
				You have %shipCount% deployed in the system.
				
			</Text>
			<Text id="descNoSquadron">
			
				None of your ships are deployed in this system.
				
			</Text>
			<Text id="descShipsSelected">

				You've selected %shipCount% in your squadron.
			
			</Text>
			<Text id="descShipSelected">

				%ShipClass% selected.

			</Text>
			<Text id="descCharacterSelected">

				%Name% is flying %shipClass%.
			
			</Text>

			<Text id="nounShip">ship(s)</Text>
		</Language>
	</DockScreen>

</TranscendenceModule>
