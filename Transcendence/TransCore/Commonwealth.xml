<?xml version="1.0" encoding="utf-8"?>

<TranscendenceModule>

<!-- BASIC COMMONWEALTH RULES

	PLAYER DATA
	
	commonCrime:	Description of the player's crime (e.g., "slave-trading")
	commonCrimeSeverity: The severity of the crime
						0 = No crime
						1 = Misdemeanor (drug possession)
						2 = Felony (piracy)
						3 = Crimes against Humanity (slave-trading, genocide, mass-destruction)
	commonCrimeRecord: Number of times player has been caught and released for a felony
	
-->

	<Sovereign UNID="&svCommonwealth;"
			name=":the Commonwealth"
			adjective="Commonwealth"
			demonym=":a Commonwealth citizen(s)"

			alignment="constructive chaos"
			inherit="&unidCommonText;"
			>

		<ItemEncounterDesc>
			<Frequency criteria="* +commonwealth;" frequency="common"	systemCriteria="+commonwealthSpace;" />
			<Frequency criteria="* +commonwealth;" frequency="uncommon" systemCriteria="+humanSpace; -commonwealthSpace;"/>

			<Frequency criteria="* +commonwealth;" frequency="notRandom" />
		</ItemEncounterDesc>

		<AttributeDesc>
			<!-- These item attributes are used across all Human Space (not just for
				Commonwealth). -->

			<ItemAttribute id="human.basicFood"	label="basic food"			criteriaLabel="basic foods"				criteria="* +food; -lux; -illegal;"/>
			<ItemAttribute id="human.lux"		label="luxury good"			criteriaLabel="luxury goods"			criteria="* +lux; -illegal;"/>
			<ItemAttribute id="human.meds"		label="medical supplies"	criteriaLabel="medical supplies"		criteria="* +meds;"/>
			<ItemAttribute id="human.res"		label="industrial resource"	criteriaLabel="industrial resources"	criteria="*~f +res; -ore; -illegal;"/>

			<ItemAttribute id="human.armor"									criteriaLabel="armors"					criteria="a -illegal;"/>
			<ItemAttribute id="human.shields"								criteriaLabel="shields"					criteria="s -illegal;"/>
			<ItemAttribute id="human.weapons"								criteriaLabel="weapons &amp; ammo"		criteria="wm -illegal;"/>
		</AttributeDesc>

		<Events>
			<GetGlobalAchievements>
				(append
					;	Crime record
					
					(if (geq (int (objGetData gPlayerShip "commonCrimeSeverity")) 2)
						{
							desc: (typTranslate gType 'textWantedFor { crimeText: (objGetData gPlayerShip 'commonCrime) })
							sectionID: 'criminalRecord
							}
						)
					)
			</GetGlobalAchievements>

			<GetGlobalDockScreen>
				; If the player has docked with an active commonwealth station
				; with customs, then we need to check for various things
				; (like radiation poisoning and smuggling).
				;
				; NOTE: We return a screen and a priority. The priority is used
				; to decide whether other screens should be shown before or after
				; these. Follow these rules:
				;
				; Screens that prevent docking:				10
				; Screens that imprison the player:			8
				; Screens that confiscate:					6
				; Screens that complete missions:			4
				
				(switch
					; This does not apply to stations without customs
					(not (objMatches gSource Nil "sTAV +commonwealthCustoms;"))
						Nil

					; If customs is temporarily disabled, then we don't do anything.
					(= (objFireEvent gSource 'GetCommonwealthCustomsStatus) 'disabled)
						Nil
						
					;	NOTE: No need to check for radiation because it is handled
					;	by dsRPGDecontamination because we set rpg.checkRadioactive

					; If the player has sold slaves then he/she is arrested.
					(geq (int (objGetData gPlayerShip "commonCrimeSeverity")) 2)
						{	screen:&dsCommonwealthImprison;		priority:8		overrideOnly:true	}
						
					; If the player has slaves then free them
					(and (objGetItems gPlayerShip "* +slaves;")
							(not (scrGetSessionData gScreen 'rpg.noSlaveConfiscation))
							(not (scrGetSessionData gScreen 'commonwealth.noSlaveConfiscation))
							)
						{	screen:&dsRPGFreeSlaves;	priority:8		overrideOnly:true	}
						
					; If the player has a black market container, then she is imprisoned
					(and (not (objGetItems gPlayerShip "*I+SmugglersHold;")) 
							(objGetItems gPlayerShip "*U+SealedContainer;")
							(not (objGetData gPlayerShip "00001002_ConfiscateSealedContainer"))
							)
						(block Nil
							; This side-effect is OK because it is OK if we call it multiple
							; times, and it is OK if some other screen takes priority.
							(intCommonwealthCrime 2 "smuggling")
							
							{	screen:&dsCommonwealthImprison;	priority:8		overrideOnly:true	}
							)
							
					; If we have illegal items in the cargo hold then we need
					; to confiscate them
					(and (not (objGetItems gPlayerShip "*I+SmugglersHold"))
							(or (objGetItems gPlayerShip "*U +Illegal; -ID; -slaves;")
								(and (objGetItems gPlayerShip "*U +Military") (not (objGetItems gPlayerShip "* +MilitaryID")))))
						{	screen:&dsCommonwealthConfiscate;	priority:6		overrideOnly:true	}

					Nil
					)
			</GetGlobalDockScreen>
			
			<OnGlobalPlayerSoldItem>
				(switch
					;	If the player sold slaves, chance they get caught
					
					(itmHasAttribute gItem 'slaves)
						(block (
							;	2% chance of arrest per slave sold.
							(chanceOfArrest 2)
							)
							(objIncData gPlayerShip 'slaveSales (ecoExchange aPrice aCurrency 'credit))

							(if (rollChance chanceOfArrest (itmGetCount gItem))
								(intCommonwealthCrime 2 "slave-trading")
								)
							)
					)
			</OnGlobalPlayerSoldItem>
		</Events>
		
		<Language>
			<Text id="rpg.descDeclareSlaves">

				You approach the customs podium, an officer asks you:

				"Anything to declare?"

				You remember that you have %itemName% in your cargo hold.

			</Text>
			<Text id="rpg.descRescueSlaves.1">

				You inform the Commonwealth authorities that you have rescued 
				a slave.
				
				The jaded officer takes the slave coffin and files a routine 
				report.
			
			</Text>
			<Text id="rpg.descRescueSlaves.2">
			
				You inform the Commonwealth authorities that you have rescued a
				couple of slaves.
				
				The jaded officer takes the	two slave coffins and files a 
				routine report.
			
			</Text>
			<Text id="rpg.descRescueSlaves.several">

				You inform the Commonwealth authorities that you have rescued 
				several slaves. The officer in charge thanks you:

				"You must have a pretty good ship to have survived a fight 
				against Slavers!"
				
			</Text>

			<Text id="textWantedFor">Wanted by the Commonwealth for %crimeText%</Text>
		</Language>
	</Sovereign>

	<SystemMap unid="&smCommonwealthSpace;"
			displayOn="&smHumanSpace;"
			>
		<TopologyProcessor priority="primaryColony">
			<System criteria="+newBeyond;"	attributes="commonwealthCore, commonwealthSpace"/>
			<System criteria="+nodeID:SK;"	attributes="commonwealthCapital, commonwealthCore, commonwealthSpace"/>
			<System criteria="+ungoverned;" attributes="commonwealthCore, commonwealthSpace"/>
			<System criteria="+outerRealm;" attributes="commonwealthCore, commonwealthSpace"/>
		</TopologyProcessor>
	</SystemMap>

	<EconomyType UNID="&ecCreditEconomy;"
			id=				"credit" 
			currency=		"credit(s)"
			conversion=		"100"
			/>

<!-- STATION TYPES -->

	<!-- Commonwealth Colony -->

	<StationType UNID="&stCommonwealthColony;"
			name=				"Commonwealth colony"
			sovereign=			"&svCommonwealth;"
			inherit=			"&baCommonwealthStation;"
				 
			attributes=			"commonwealth, commonwealthCustoms, friendly, generic, human, majorStation, primary, populated"
				 
			dockScreen=			"Main"
			abandonedScreen=	"&dsRPGAbandonedStation;"

			level=				"4"
			size=				"390"
			armorID=			"&itPlasteelPlate;"
			hitPoints=			"320"
			multiHull=			"true"
			regen=              "6"
			shipRegen=			"4"
				 
			fireRateAdj=		"80"
			explosionType=		"&vtBlastExplosion2;"
			ejectaType=			"&vtWreckEjecta;"
			>
		
		<Names noArticle="true">
			Agricola Station; Britannia Station; Canterbury Station;
			Devonshire Colony; Enterprise Station; Farsend Station;
			Grenoble Colony; Hellas Station; Independence Station;
			Janus Colony; Koran Station; Lexington Colony; Massachusetts Colony;
			Nakura Colony; Ontario Station; Paduan Station; Qatar Station;
			Ryad Colony; Santiago Station; Tango Colony; Umber Station;
			Victory Colony; Winchell Station; %s Colony; %s Alpha Station;
			%s Beta Station; %s Gamma Station; %s Epsilon Station;
			Anacreon Colony %1%0%0%0; Anacreon Colony %1%0%0; Anacreon Colony %1%0%0;
			Anacreon Colony %1%0%0; Anacreon Colony %1%0%0
		</Names>
		
		<Properties>
			<Definition id="blackMarket.buysIllegals">"*NU +illegal; +consumerGood; -ID; +property:known; &lt;=#25;"</Definition>
		</Properties>

		<!-- Encounter Info -->

		<Encounter
				systemCriteria=			"+commonwealthSpace;"
				systemAffinity=			"+commonwealthCore;"
				levelFrequency=			"cuc-- ----- ----- ----- -----"

				locationCriteria=		"-outerSystem, +planetary"
				enemyExclusionRadius=	"50"
				/>

		<!-- Trade and Items -->

		<Trade currency="credit">
			<Sell	criteria="m +commonwealth; +basicAmmo; -defective; -illegal; -notForSale; -notStandard;" priceAdj="100" inventoryAdj="200" levelFrequency="systemLevel:ruc|c|cur"/>
			<Sell	criteria="*NU -defective; -Illegal; -ID; -NotForSale;"	priceAdj="100"/>
			<Buy	criteria="amdNU -Illegal; -NotForSale;"		priceAdj="50"/>
			<Buy	criteria="*NU -Illegal; -ID; -NotForSale;"	priceAdj="90"/>
			<Buy	criteria="*NU -Illegal; -ID;"				priceAdj="10"/>
			
			<Refuel			criteria="f +BasicFuel; L:1-5;" priceAdj="100"/>
			<RepairArmor	criteria="a L:1-5;" priceAdj="100"/>
			<ReplaceArmor	criteria="a L:1-5;" priceAdj="100"/>
			<InstallDevice	criteria="d L:1-5;" priceAdj="100"/>
			<RemoveDevice	criteria="d L:1-5;" priceAdj="100"/>
			<Decontaminate	criteria="*"		priceAdj="100"/>

			<ConsumeTrade	criteria="{core.fusionFuel}"		impact="2"/>
			<ConsumeTrade	criteria="{human.basicFood}"	impact="5"/>
			<ConsumeTrade	criteria="{human.lux}"		impact="3"/>
			<ConsumeTrade	criteria="{human.meds}"		impact="2"/>
			<ConsumeTrade	criteria="{human.res}"		impact="1"/>
			<ConsumeTrade	criteria="{core.ore}"			impact="2"/>
		</Trade>

		<Items>
			<RandomItem count="10" 
					criteria=		"ad L:1-5; +commonwealth; -alien; -defective; -Illegal; -Military; -Specialty; -NotStandard; -NotForSale;"
					levelFrequency=	"systemLevel:r|c|cur"
					/>
			<RandomItem count="10" 
					criteria=		"*~adm -alien; -defective; -Illegal; -Military; -Specialty; -NotStandard; -NotForSale;"
					levelFrequency=	"systemLevel:ru|c|cur"
					/>
			<Item count="4d12"	item="&itHelium3FuelRod;" />
		</Items>
		
		<!-- Configuration -->
		
		<Devices>
			<Device deviceID="&itTeV9Blaster;"	omnidirectional="true"/>
		</Devices>
		
		<!-- Ships and Defenses -->

		<Ships>
			<Lookup count="2" table="&tbCommDefenders;"/>
			<Lookup count="1d4" table="&tbCommPrivateCrafts;"/>
		</Ships>

		<Reinforcements minShips="5">
			<Table>
				<Lookup chance="75" table="&tbCommDefenders;"/>
				<Lookup chance="25" table="&tbCommPrivateCrafts;"/>
			</Table>
		</Reinforcements>
		
		<!-- Image and Effects -->
		
		<Image imageID="&rsCommonwealthColony;" imageWidth="320" imageHeight="290" viewportRatio="0.05"/>

		<DockingPorts
				portCount=		"10"
				portRadius=		"175"
				>
		</DockingPorts>
		
		<!-- Dock Screen -->

		<DockScreens>
			<Main>
				<Panes>
					<Default descID="descWelcome">
						<Actions>
							<Action id="actionMainHall" default="1">
								(rpgMissionAssignment {
									missionCriteria: (cat "n +commonwealthColony; =" (sysGetLevel) ";")
									maxPerStation: 1
									noMissionTextID: 'descHallEmpty
									})
							</Action>
					
							<Action id="actionCommoditiesExchange">
								(scrShowScreen gScreen &dsRPGCommoditiesExchange;)
							</Action>

							<Action id="actionDockServices">
								(rpgDockServices gPlayerShip)
							</Action>

							<Action id="actionUndock" cancel="1">
								<Exit/>
							</Action>
						</Actions>
					</Default>
				</Panes>
			</Main>
		</DockScreens>
		
		<!-- Events and Data -->

		<Events>
			<OnCreate>
				(sysAddObjRecurringTimerEvent 150 gSource "OnTrafficControl")
			</OnCreate>

			<OnTrafficControl>
				(comTrafficControl gSource 10)
			</OnTrafficControl>
		</Events>
		
		<Language>
			<Text id="descWelcome">

				You are in the docking bay of a Commonwealth colony filled with
				shuttles and starships.
				
				A loose hose spills dirty water onto the landing pad; elsewhere,
				an automatic load-lifter moves forward and back again as it 
				unloads a ship's cargo hold. The air smells of liquid fuel and 
				exhaust.

			</Text>
		</Language>
	</StationType>

	<!-- Commonwealth Turret -->

	<StationType UNID="&stCommonwealthTurret;"
			name=				"Commonwealth defense turret"
			sovereign=			"&svCommonwealth;"
			inherit=			"&dsDockScreenBase;"

			attributes=			"commonwealth, staticDefense"

			abandonedScreen=	"&dsRPGAbandonedStation;"
			dockScreen=			"Main"
			noMapLabel=			"true"
			noFriendlyFire=		"true"

			mass=				"2000"
			armorID=			"&itP120HexphaseArmor;"
			hitPoints=			"100"
			structuralHitPoints="20"
			fireRateAdj=		"40"
			ejectaType=			"&vtWreckEjecta;"
			>

		<ImageVariants>
			<Image			imageID="&rsStations4;" imageX="96" imageY="320" imageWidth="32" imageHeight="32"/>
			<Image			imageID="&rsStations4;" imageX="96" imageY="352" imageWidth="32" imageHeight="32"/>
			<Image			imageID="&rsStations4;" imageX="96" imageY="384" imageWidth="32" imageHeight="32"/>
			<Image			imageID="&rsStations4;" imageX="96" imageY="416" imageWidth="32" imageHeight="32"/>
		</ImageVariants>

		<Devices>
			<Device deviceID="&itTeV9Blaster;"	omnidirectional="true"/>
		</Devices>

		<DockScreens>
			<Main>
				<Panes>
					<Default descID="descWelcome">
						<Actions>
							<Action id="actionUndock" cancel="1">
								<Exit/>
							</Action>
						</Actions>
					</Default>
				</Panes>
			</Main>
		</DockScreens>

		<DockingPorts
				portCount=		"2"
				portRadius=		"24"
				maxDist=		"3"
				/>

		<Language>
			<Text id="descWelcome">
				You are docked at a Commonwealth Defense Turret. These armed and armored
				turrets are used to defend Commonwealth stations and settlements in the
				Ungoverned Territories beyond St. Katharine's Star.
			</Text>
		</Language>
	</StationType>

	<!-- Commonwealth Colony, Armed -->

	<StationType UNID="&stCommonwealthColonyArmed;"
			name=				"armed Commonwealth colony"
			sovereign=			"&svCommonwealth;"
			inherit=			"&baCommonwealthStation;"
				 
			attributes=			"commonwealth, commonwealthCustoms, fleetDelivery, friendly, generic, human, majorStation, primary, populated"
				 
			dockScreen=			"Main"
			abandonedScreen=	"&dsRPGAbandonedStation;"

			size=				"390"
			armorID=			"&itP120HexphaseArmor;"
			hitPoints=			"560"
			multiHull=			"true"
			regen=              "10"
			shipRegen=			"6"
				 
			explosionType=		"&vtBlastExplosion3;"
			ejectaType=			"&vtWreckEjecta;"
			fireRateAdj=		"40"
			>

		<Names noArticle="true">Anvil Station; Brimstone Station; Cerberus Station;
				Demesne Colony; Exile Station; Farsend Station;
				Greenspace Colony; Hellas Station; Independence Station;
				Jotur Colony; C%1%0 Outpost; Lethe Colony; Mars Colony;
				Nebulon Colony; Oort Station; Purgatory Station; Quequeg Station;
				Rend Colony; Sangre Station; Tantalus Colony; Umber Station;
				Vindication Colony; Wight Station; %s Colony; %s Alpha Station;
				%s Beta Station; %s Gamma Station; %s Epsilon Station</Names>

		<Properties>
			<Definition id="blackMarket.buysIllegals">"*NU +illegal; +consumerGood; -ID; +property:known; &lt;=#25;"</Definition>
		</Properties>

		<!-- Encounter Info -->

		<Encounter
				systemCriteria=			"+commonwealthSpace;"
				systemAffinity=			"+commonwealthCore;"
				levelFrequency=			"---uu cu--- ----- ----- -----"

				locationCriteria=		"+planetary"
				enemyExclusionRadius=	"60"
				/>

		<!-- Trade and Items -->

		<Trade currency="credit">
			<Sell	criteria="m +commonwealth; -premiumAmmo; -defective; -illegal; -notForSale; -notStandard;" priceAdj="100" inventoryAdj="200" levelFrequency="systemLevel:ruc|c|cur"/>
			<Sell	criteria="*NU -defective; -Illegal; -ID; -NotForSale;"	priceAdj="100"/>
			<Buy	criteria="amdNU -Illegal; -NotForSale;"		priceAdj="50"/>
			<Buy	criteria="*NU -Illegal; -ID; -NotForSale;"	priceAdj="90"/>
			<Buy	criteria="*NU -Illegal; -ID;"				priceAdj="10"/>
			
			<Refuel			criteria="f +BasicFuel; L:1-7;" priceAdj="100"/>
			<RepairArmor	criteria="a L:1-7;" priceAdj="100"/>
			<ReplaceArmor	criteria="a L:1-7;" priceAdj="100"/>
			<InstallDevice	criteria="d L:1-7;" priceAdj="100"/>
			<RemoveDevice	criteria="d L:1-7;" priceAdj="100"/>
			<Decontaminate	criteria="*"		priceAdj="100"/>

			<ConsumeTrade	criteria="{core.antimatterFuel}"	impact="2"/>
			<ConsumeTrade	criteria="{human.basicFood}"	impact="5"/>
			<ConsumeTrade	criteria="{human.lux}"		impact="3"/>
			<ConsumeTrade	criteria="{human.meds}"		impact="2"/>
			<ConsumeTrade	criteria="{human.res}"		impact="1"/>
			<ConsumeTrade	criteria="{core.ore}"			impact="2"/>
		</Trade>

		<Items>
			<RandomItem	count="10" 
					criteria=		"ad L:1-7; +commonwealth; -defective; -Illegal; -Military; -Alien; -Specialty; -NotStandard; -NotForSale;"
					levelFrequency=	"systemLevel:r|c|cur"
					/>
			<RandomItem count="10" 
					criteria=		"*~adm -defective; -Illegal; -Military; -Alien; -Specialty; -NotStandard; -NotForSale;"
					levelFrequency=	"systemLevel:ru|c|cur"
					/>
			<Item count="4d12"	item="&itXenotiteFuelRod;" />
		</Items>

		<!-- Configuration -->
		
		<Devices>
			<Device deviceID="&itTeV9Blaster;"	omnidirectional="true"/>
		</Devices>

		<!-- Satellites -->
		
		<Satellites overlapCheck="asteroids">
			<Orbitals distance="12" angle="45">
				<Station type="&stCommonwealthTurret;" imageVariant="2"/>
			</Orbitals>

			<Orbitals distance="12" angle="135">
				<Station type="&stCommonwealthTurret;" imageVariant="1"/>
			</Orbitals>

			<Orbitals distance="12" angle="225">
				<Station type="&stCommonwealthTurret;" imageVariant="0"/>
			</Orbitals>

			<Orbitals distance="12" angle="315">
				<Station type="&stCommonwealthTurret;" imageVariant="3"/>
			</Orbitals>
		</Satellites>
		
		<!-- Ships and Defenses -->
		
		<Ships>
			<Lookup count="2" table="&tbCommDefenders;"/>
			<Lookup count="1d4" table="&tbCommPrivateCrafts;"/>
		</Ships>

		<Reinforcements minShips="5">
			<Table>
				<Lookup chance="75" table="&tbCommDefenders;"/>
				<Lookup chance="25" table="&tbCommPrivateCrafts;"/>
			</Table>
		</Reinforcements>

		<!-- Image and Effects -->
		
		<Image imageID="&rsCommonwealthArmoredColony;" imageWidth="320" imageHeight="290" viewportRatio="0.05"/>

		<DockingPorts
				portCount=		"10"
				portRadius=		"175"
				>
		</DockingPorts>
		
		<!-- Dock Screens -->
		
		<DockScreens>
			<Main>
				<Panes>
					<Default descID="descWelcome">
						<Actions>
							<Action id="actionMainHall" default="1">
								(rpgMissionAssignment {
									missionCriteria: (cat "n +commonwealthColonyArmed; =" (sysGetLevel) ";")
									maxPerStation: 1
									noMissionTextID: 'descHallEmpty
									})
							</Action>
					
							<Action id="actionCommoditiesExchange">
								(scrShowScreen gScreen &dsRPGCommoditiesExchange;)
							</Action>

							<Action id="actionDockServices">
								(rpgDockServices gPlayerShip)
							</Action>

							<Action id="actionUndock" cancel="1">
								<Exit/>
							</Action>
						</Actions>
					</Default>
				</Panes>
			</Main>

		</DockScreens>
		
		<!-- Events and Data -->

		<Events>
			<OnCreate>
				(sysAddObjRecurringTimerEvent 150 gSource "OnTrafficControl")
			</OnCreate>

			<OnTrafficControl>
				(comTrafficControl gSource 10)
			</OnTrafficControl>
		</Events>
		
		<Language>
			<Text id="descWelcome">

				You are in the docking bay of a Commonwealth colony. Dockworkers
				and professionals crisscross the bay, heads burried in datapads.

				The walls are filled with blinking holopanes directing traffic 
				or advertising various luxuries.

				A squad of militia-members stands guard around a console.
				
			</Text>
		</Language>
	</StationType>

	<!-- Commonwealth Dry Dock -->

	<StationType UNID="&stCommonwealthDryDock;"
			name=				"Commonwealth dry dock"
			sovereign=			"&svCommonwealth;"
			inherit=			"&baCommonwealthStation;"
				 
			attributes=			"commonwealth, commonwealthCustoms, fleetDelivery, friendly, generic, human, majorStation, populated"

			dockScreen=			"Main"
			abandonedScreen=	"&dsRPGAbandonedStation;"

			level=				"5"
			size=				"511"
			armorID=			"&itPlasteelPlate;"
			hitPoints=			"800"
			multiHull=			"true"
			regen=              "8"
			shipRegen=			"8"

			explosionType=		"&vtBlastExplosion3;"
			ejectaType=			"&vtWreckEjecta;"
			>

		<Properties>
			<Constant		id="rpg.shipBrokerCriteria">"s +systemLevel:0-2; +commonwealth; -military; -notStandard; +shipBroker;"</Constant>
			<DynamicData	id="rpg.shipBrokerInventory">(rpgGetShipInventory gSource)</DynamicData>
		</Properties>

		<!-- Encounter Info -->

		<Encounter
				systemCriteria=			"+commonwealthSpace;"
				systemAffinity=			"+commonwealthCore;"
				levelFrequency=			"uucuu r---- ----- ----- -----"

				locationCriteria=		"+planetary"
				enemyExclusionRadius=	"75"

				unique=					"inSystem"
				/>

		<!-- Trade and Items -->

		<Trade currency="credit">
			<Sell	criteria="m +commonwealth; +basicAmmo; -defective; -illegal; -notForSale; -notStandard;" priceAdj="100" inventoryAdj="200" levelFrequency="systemLevel:ruc|c|cur"/>
			<Sell	criteria="*NU -defective; -Illegal; -ID; -NotForSale;"	priceAdj="100"/>
			<Buy	criteria="amdNU -Illegal; -NotForSale;"		priceAdj="50"/>
			<Buy	criteria="*NU -Illegal; -ID; -NotForSale;"	priceAdj="90"/>
			<Buy	criteria="*NU -Illegal; -ID;"				priceAdj="10"/>
			
			<Refuel			criteria="f +BasicFuel; L:1-7;" priceAdj="100"/>
			<RepairArmor	criteria="a L:1-8;" priceAdj="100"/>
			<ReplaceArmor	criteria="a L:1-8;" priceAdj="100"/>
			<InstallDevice	criteria="d L:1-7;" priceAdj="100"/>
			<RemoveDevice	criteria="d L:1-7;" priceAdj="100"/>
			<Decontaminate	criteria="*"		priceAdj="100"/>

			<SellShip		criteria="s -notForSale;" priceAdj="100"/>
			<BuyShip		criteria="s L:1-10; -notForSale;" priceAdj="80"/>

			<ConsumeTrade	criteria="{core.fusionFuel}"		impact="3"/>
		</Trade>
		
		<Items>
			<RandomItem count="18-25" 
				criteria=		"a L:1-8; +commonwealth; -alien; -defective; -illegal; -military; -notForSale; -notStandard; -specialty;"
				levelFrequency=	"systemLevel:r|c|cur"
				/>
			<RandomItem count="8-10" 
				criteria=		"scv L:1-7; +commonwealth; -alien; -defective; -illegal; -military; -notForSale; -notStandard; -specialty;"
				levelFrequency=	"systemLevel:r|c|cur"
				/>
			<RandomItem count="4-6" 
				criteria=		"r L:3-7; +commonwealth; -alien; -defective; -illegal; -military; -notForSale; -notStandard;"
				levelFrequency=	"systemLevel:ru|c|curv"
				/>
			<RandomItem count="10-12" 
				criteria=		"d~scvr L:1-7; +commonwealth; -alien; -defective; -illegal; -military; -notForSale; -notStandard; -specialty;"
				levelFrequency=	"systemLevel:r|c|cur"
				/>
			<RandomItem count="5-10"
				criteria=		"u +armorRepair; -defective; -illegal; -military; -notForSale; -notStandard;"
				levelFrequency=	"systemLevel:ru|c|curv"
				/>
		</Items>

		<!-- Ships and Defenses -->

		<Ships>
			<Lookup count="1d3" table="&tbCommDefenders;"/>
			<Lookup count="1d2" table="&tbCommPrivateCrafts;"/>
		</Ships>

		<Reinforcements minShips="5">
			<Table>
				<Lookup chance="75" table="&tbCommDefenders;"/>
				<Lookup chance="25" table="&tbCommPrivateCrafts;"/>
			</Table>
		</Reinforcements>

		<!-- Image and Effects -->

		<Image			imageID="&rsCommonwealthDryDock;" imageWidth="360" imageHeight="360" viewportRatio="0.065"/>

		<DockingPorts
				portCount="8"
				portRadius="205"
				portAngle="15"
				/>

		<!-- Dock Screens -->

		<DockScreens>
			<Main>
				<Panes>
					<Default descID="descWelcome">
						<Actions>
							<Action id="actionBuyShip">
								(scrShowScreen gScreen &dsRPGShipBroker;)
							</Action>

							<Action id="actionCommoditiesExchange">
								(scrShowScreen gScreen &dsRPGCommoditiesExchange;)
							</Action>

							<Action id="actionDockServices" default="1">
								(rpgDockServices gPlayerShip)
							</Action>
					
							<Action id="actionUndock" cancel="1">
								<Exit/>
							</Action>
						</Actions>
					</Default>
				</Panes>
			</Main>
		</DockScreens>

		<!-- Behavior & Language -->

		<Language>
			<Text id="descWelcome">

				You are in a large enclosed docking bay. Ship in varying stages
				of repair line the docks around you. Workers in powered frames
				dance around the ships.

				Holopanes advertise the latest deals on new starships.

			</Text>
		</Language>

	</StationType>

	<!-- Commonwealth Medical Suburb -->

	<StationType UNID="&stMedicalSuburb;"
			name=				"Commonwealth medical colony"
			sovereign=			"&svCommonwealth;"
			inherit=			"&baCommonwealthStation;"
				 
			attributes=			"commonwealth, commonwealthCustoms, friendly, generic, human, populated"
				 
			dockScreen=			"Main"
			abandonedScreen=	"&dsRPGAbandonedStation;"

			level=				"4"
			size=				"390"
			armorID=			"&itPlasteelPlate;"
			hitPoints=			"320"
			multiHull=			"true"
			regen=              "4"
			shipRegen=			"1"
				 
			fireRateAdj=		"80"
			explosionType=		"&vtBlastExplosion2;"
			ejectaType=			"&vtWreckEjecta;"
			>

		<Names noArticle="true">
			Asclepius Station; Barnard Station; Station Charity; 
			Crick Station; Drew Station; Station Empathy; Freud Complex;
			Station Grace; Haeckel Station; Imhotep Station;
			Jung Center; Koch Station; Leeuwenhoek Station;
			Morton Station; Nicolle Station; Osler Station;
			Penfield Station; Station Respite; Salk Station;
			Taussig Station; Urbani Station; Virchow Station;
			Watson Station; Yegerov Station; Zygote Station;
			Cyteen Station; NeuroSci Station; Biogen Station;
			Pharmaton %s; Medecin d'Etoile Station
		</Names>

		<Properties>
			<Definition id="blackMarket.buysIllegals">"*NU +illegal; +meds; -ID; +property:known; &lt;=#25;"</Definition>
		</Properties>

		<!-- Encounter Info -->

		<Encounter
				systemCriteria=			"+commonwealthSpace;"
				systemAffinity=			"+commonwealthCore;"
				levelFrequency=			"uuurr ----- ----- ----- -----"

				locationCriteria=		"-outerSystem, +planetary"
				enemyExclusionRadius=	"50"

				unique=					"inSystem"
				/>

		<!-- Trade and Items -->
		
		<Trade currency="credit">
			<Sell	criteria="*NU +Meds; -defective; -Illegal; -ID; -NotForSale;"	priceAdj="100"/>
			<Buy	criteria="*NU +Food; -Illegal;"	priceAdj="100"/>
			<Buy	criteria="*NU +Lux; -Illegal;"	priceAdj="100"/>
			<Decontaminate	criteria="*"		priceAdj="100"/>

			<ConsumeTrade	criteria="{core.fusionFuel}"		impact="2"/>
			<ConsumeTrade	criteria="{human.basicFood}"	impact="3"/>
			<ConsumeTrade	criteria="{human.lux}"		impact="5"/>
			<ConsumeTrade	criteria="{human.res}"		impact="1"/>

			<ProduceTrade	criteria="{human.meds}"		impact="20"/>
		</Trade>

		<Items>
			<RandomItem count="10-20" 
					criteria=		"* +Meds; -defective; -Illegal; -Military; -Alien; -NotStandard; -NotForSale;"
					levelFrequency=	"systemLevel:ru|c|cur"
					/>
		</Items>

		<!-- Configuration -->
		
		<Devices>
			<Device deviceID="&itTeV9Blaster;"	omnidirectional="true"/>
		</Devices>

		<!-- Ships and Defenses -->
		
		<Ships>
			<Lookup count="2" table="&tbCommDefenders;"/>
			<Lookup count="1d4" table="&tbCommPrivateCrafts;"/>
		</Ships>

		<Reinforcements minShips="5">
			<Table>
				<Lookup chance="75" table="&tbCommDefenders;"/>
				<Lookup chance="25" table="&tbCommPrivateCrafts;"/>
			</Table>
		</Reinforcements>

		<!-- Image and Effects -->

		<Image imageID="&rsCommonwealthMedicalColony;" imageWidth="320" imageHeight="290" viewportRatio="0.05"/>

		<DockingPorts
				portCount=		"10"
				portRadius=		"175"
				>
		</DockingPorts>

		<!-- Dock Screens -->
		
		<DockScreens>
			<Main>
				<Panes>
					<Default>
						<OnPaneInit>
							(scrSetDescTranslate gScreen 'descWelcome {objName: (objGetName gSource)})
						</OnPaneInit>

						<Actions>
							<Action id="actionHospital">
								(rpgMissionAssignment {
									missionCriteria: (cat "n +commonwealthHospital; =" (sysGetLevel) ";")
									maxPerStation: 1
									noMissionTextID: 'descHospitalEmpty
									})
							</Action>
							<Action id="actionCommoditiesExchange">
								(scrShowScreen gScreen &dsRPGCommoditiesExchange;)
							</Action>

							<Action id="actionUndock" cancel="1">
								<Exit/>
							</Action>
						</Actions>
					</Default>
				</Panes>
			</Main>
		</DockScreens>
		
		<!-- Events and Data -->
		
		<Language>
			<Text id="actionHospital">[H]ospital</Text>

			<Text id="descWelcome">

				You are in the docking bay of %objName%. Medical professionals
				live and work on this station, doing everything from research,
				to drug manufacturing, to remote medicine.

			</Text>
			<Text id="descHospitalEmpty">

				Medtechs and patients crisscross the large reception area of the
				hospital. Displays and holograms direct patients to various 
				specialties.
			
			</Text>
			<Text id="rpg.stationWillNotBuy">

				%StationName% buys food and luxury items. We are not 
				interested in buying %itemName%.

			</Text>

			<Text id="blackMarketSmuggle01.briefing">
				(list
					{	descID:'textBMSBriefing.1	acceptLabelID:'actionBMSAccept.1		declineLabelID:'actionBMSDecline.1		translateType:gType	}
					)
			</Text>
			<Text id="blackMarketSmuggle01.declineReply">

				The medtech sighs.

				"I don't know how to convince the Corporations to care about 
				people. Not without using force, anyway."

			</Text>
			<Text id="textBMSBriefing.1">

				You enter the hospital and talk to a medtech at the reception
				desk. He complains about a lack of supplies.

				"Corporate oligarchs are hoarding the good meds for themselves.
				We can't get enough for all our patients. Not legally, anyway."
				
			</Text>
			<String id="actionBMSAccept.1">"I can [s]ell you some meds."</String>
			<String id="actionBMSDecline.1">"Too bad, but I ca[n]'t help."</String>

			<Text id="core.mapDesc">"Sells meds &mdash; Buys food and luxuries"</Text>
		</Language>
	</StationType>

	<!-- Commonwealth Residentials -->

	<StationType UNID="&stCommonwealthResidentials;"
			name=				": Commonwealth residentials|Commonwealth residentials"
			sovereign=			"&svCommonwealth;"
			inherit=			"&baCommonwealthStation;"
				 
			attributes=			"commonwealth, commonwealthCustoms, friendly, generic, human, populated"
				 
			dockScreen=			"Main"
			abandonedScreen=	"&dsRPGAbandonedStation;"

			level=				"4"
			size=				"390"
			armorID=			"&itPlasteelPlate;"
			hitPoints=			"320"
			multiHull=			"true"
			regen=              "6"
				 
			explosionType=		"&vtBlastExplosion2;"
			ejectaType=			"&vtWreckEjecta;"
			>

		<Properties>
			<Definition id="blackMarket.buysIllegals">"*NU +illegal; +consumerGood; -ID; +property:known; &lt;=#25;"</Definition>
		</Properties>
		
		<!-- Trade and Items -->

		<Trade currency="credit">
			<Decontaminate	criteria="*"		priceAdj="100"/>
			
			<ConsumeTrade	criteria="{core.fusionFuel}"		impact="1"/>
			<ConsumeTrade	criteria="{human.basicFood}"	impact="5"/>
			<ConsumeTrade	criteria="{human.lux}"		impact="2"/>
			<ConsumeTrade	criteria="{human.meds}"		impact="5"/>
			<ConsumeTrade	criteria="{human.res}"		impact="1"/>
		</Trade>
		
		<!-- Ships and Defenses -->

		<Ships>
			<Lookup table="&tbCommDefenders;"/>
			<Lookup count="1d4+1" table="&tbCommPrivateCrafts;"/>
		</Ships>

		<!-- Image and Effects -->
		
		<Image imageID="&rsCommonwealthResidentials;" imageWidth="320" imageHeight="290" viewportRatio="0.05"/>

		<DockingPorts
				portCount=		"10"
				portRadius=		"175"
				>
		</DockingPorts>
		
		<!-- Dock Screens -->
		
		<DockScreens>
			<Main>
				<Panes>
					<Default descID="descWelcome">
						<Actions>
							<Action id="actionMainHall" default="1">
								(rpgMissionAssignment {
									missionCriteria: (cat "n +commonwealthResidentials; =" (sysGetLevel) ";")
									maxPerStation: 1
									noMissionTextID: 'descHallEmpty
									})
							</Action>
					
							<Action id="actionUndock" cancel="1">
								<Exit/>
							</Action>
						</Actions>
					</Default>
				</Panes>
			</Main>
		</DockScreens>

		<!-- Events and Data -->
		
		<Language>
			<Text id="descWelcome">

				You are in the docking bay of a residential station. You see a
				mix of dockworkers, professionals, and families boarding 
				shuttles and starships.

				Scuffed and faded infopanes line the walls, and you smell the
				stale exhaust of overworked ventilation systems.

			</Text>
		</Language>
	</StationType>
	
	<!-- Commonwealth Slums

	GLOBAL DATA

	lastMissionTime:	Tick on which mission was given to player (Nil if never)
	totalMissionCount:	Total number of missions that the player has requested

	-->

	<StationType UNID="&stCommonwealthSlums;"
			name=				"Commonwealth habitat"
			sovereign=			"&svCommonwealth;"
			inherit=			"&baCommonwealthStation;"
				 
			dockScreen=			"Main"
			abandonedScreen=	"&dsRPGAbandonedStation;"

			level=				"3"
			multiHull=			"true"
			armorID=			"&itPlasteelPlate;"
			hitPoints=			"150"
			regen=              "1"
			ejectaType=			"&vtWreckEjecta;"

			attributes=			"commonwealth, commonwealthCustoms, friendly, generic, human, populated"
			>

		<Names noArticle="true">Habitat Alpha %1%0; Habitat Beta %1%0; Habitat Gamma %1%0; Habitat Delta %1%0;
				Habitat Epsilon %1%0; Habitat Zeta %1%0</Names>

		<Properties>
			<Variant id="rpgCharacter.stationMaster">
				(rpgCharacterRandom gSource "x +commonwealth; +stationMasterCommon;" 'stationMaster)
			</Variant>
		</Properties>

		<!-- Trade and Items -->

		<Trade>
			<Decontaminate	criteria="*"		priceAdj="100"/>
			
			<ConsumeTrade	criteria="{core.fusionFuel}"		impact="1"/>
			<ConsumeTrade	criteria="{human.basicFood}"	impact="2"/>
			<ConsumeTrade	criteria="{human.meds}"		impact="2"/>
			<ConsumeTrade	criteria="{human.res}"		impact="1"/>
		</Trade>

		<!-- Ships and Defenses -->

		<Ships>
			<Lookup count="1d4" table="&tbCommPrivateCrafts;"/>
		</Ships>

		<!-- Image and Effects -->

		<Image		imageID="&rsCommonwealthHabitat;" imageWidth="170" imageHeight="240" viewportRatio="0.02125"/>

		<DockingPorts
				portCount=		"8"
				portRadius=		"100"
				/>

		<!-- Dock Screens -->

		<DockScreens>
			<Main>
				<Panes>
					<Default>
						<OnPaneInit>
							(scrSetDescTranslate gScreen 'descWelcome {objName: (objGetName gSource)})
						</OnPaneInit>

						<Actions>
							<Action id="actionMainHall" default="1">
								(rpgMissionAssignment {
									missionCriteria: "n +commonwealthHabitat;"
									maxPerStation: 1
									missionGiver: (rpgCharacterGetInfo gSource 'stationMaster)
									noMissionTextID: 'descNoMissions
									})
							</Action>

							<Action id="actionUndock" cancel="1">
								<Exit/>
							</Action>
						</Actions>
					</Default>
				</Panes>
			</Main>
		</DockScreens>

		<!-- Events and Behavior -->

		<Events>
			<GetGlobalAchievements>
				(rpgMissionAchievements &stCommonwealthSlums; "* +commonwealthHabitat;")
			</GetGlobalAchievements>

			<GetRumors>
				(append
					(rpgRumorAdd 'commonwealthHabitat (make 'sequence 4))

					(if (= (objGetProperty gPlayerShip 'characterClass) &unidPilgrimClass;)
						(rpgRumorAdd 'commonwealthHabitat 'pilgrim)
						(rpgRumorAdd 'commonwealthHabitat 'freelancer)
						)

					(rpgRumorAdd 'commonwealthHabitat
						(switch
							(= (objGetType gPlayerShip) &scSapphirePlayer;)	'sapphire
							(= (objGetType gPlayerShip) &scEI100XPlayer;)	'ei100x
							(= (objGetType gPlayerShip) &scWolfenPlayer;)	'wolfen
																			'other
							)
						Nil
						Nil
						{	shipName: (objGetName gPlayerShip)	}
						)
					)
			</GetRumors>
		</Events>

		<Language>
			<Text id="descWelcome">

				The loud voices of a packed multitude bounce off every bulkhead
				and	corridor in the station. Old air scrubbers pump a thin, 
				odorous breeze out of rusty vents. Discarded packets of 
				Salmonite and Red Nebula beer huddle in the corner.

				Welcome to %objName%!

			</Text>
			<Text id="descNoMissions">

				The station master is working at %his@missionGiver% station. The
				comms channels are quiet and %he@missionGiver% stops to chat:

				"It's calm now, but I've been hearing a lot of military chatter
				lately."

			</Text>
			<Text id="rpg.missionTypeDesc">Commonwealth habitat missions</Text>

			<Text id="rumor.intro">

				The station master is working at %his@rumorGiver% console. 
				%He@rumorGiver% stops to chat:\n\n

			</Text>
			<String id="rumor.commonwealthHabitat.1">

				"You got a pretty nice ship there. Did your mom and dad buy it 
				for you?"

			</String>
			<Text id="rumor.commonwealthHabitat.2">

				"Truth is, you gotta approach life philosophically, you know 
				what I mean? You gotta believe that it's all going to work out 
				in the end, or else what's the point?"

			</Text>
			<Text id="rumor.commonwealthHabitat.3">

				"Nobody cares. Station needs a carbon scrubber? Get on the 
				waiting list! After the corporate suits get their grilled 
				Icelandic salmon, then they might pay attention to you. Nobody
				cares."

			</Text>
			<Text id="rumor.commonwealthHabitat.4">

				"A station is not like a starship. If you get into trouble you 
				can always run away. All we can do is sit tight and repair the 
				damage. Takes a special kind of man to live like that."

			</Text>
			<Text id="rumor.commonwealthHabitat.pilgrim">

				"I don't know what you're doing in this backwater system. You 
				wanna get to the Core? Go! What's stopping you? Kids today: they
				dream big, but they'd rather watch the 3DVs."

			</Text>
			<Text id="rumor.commonwealthHabitat.freelancer">

				"I don't know what you're doing in this backwater system. You 
				wanna see the galaxy? Go! What's stopping you? Kids today: they
				dream big, but they'd rather watch the 3DVs."

			</Text>
			<Text id="rumor.commonwealthHabitat.sapphire">

				"How do you like your %shipName%? My daughter's friend had one 
				once. It was beautiful, but not very practical for long 
				voyages."

			</Text>
			<Text id="rumor.commonwealthHabitat.ei100x">

				"How do you like your %shipName%? My son pilots an older 
				200-series in the Cairn system. He's got it up-armored with 
				polyceramic to protect against pirate attacks."

			</Text>
			<Text id="rumor.commonwealthHabitat.wolfen">

				"How do you like your %shipName%? I knew this guy John Tremaine 
				who flew one in the Militia. They're fast as hell on a whip, but
				a little flimsy. Hope you've got some good shields on her."

			</Text>
			<Text id="rumor.commonwealthHabitat.other">

				"How do you like your %shipName%? I haven't seen a lot of ships 
				like that. Is it hard to get parts for it?"

			</Text>
		</Language>
	</StationType>

	<!-- Commonwealth Settlement -->

	<StationType UNID="&stCommonwealthSettlement;"
			name=				"Commonwealth settlement"
			sovereign=			"&svCommonwealth;"
			inherit=			"&baCommonwealthStation;"
				 
			attributes=			"commonwealth, commonwealthCustoms, fleetDelivery, friendly, generic, human, populated"
				 
			dockScreen=			"Main"
			abandonedScreen=	"&dsRPGAbandonedStation;"
			
			size=				"390"
			armorID=			"&itP120HexphaseArmor;"
			hitPoints=			"950"
			multiHull=			"true"
			regen=              "20"
			shipRegen=			"4"
				 
			explosionType=		"&vtThermoExplosion2;"
			ejectaType=			"&vtWreckEjecta;"
			fireRateAdj=		"40"
			>

		<Names noArticle="true">Commonwealth Settlement %1%0%0%0</Names>

		<!-- Encounter Info -->

		<Encounter
				systemCriteria=			"+commonwealthSpace;"
				systemAffinity=			"*"
				levelFrequency=			"----- -ucr- ----- ----- -----"

				locationCriteria=		"+planetary"
				enemyExclusionRadius=	"50"
				/>

		<!-- Trade and Items -->
		
		<Trade currency="credit">
			<Sell	criteria="m +commonwealth; -premiumAmmo; -defective; -illegal; -notForSale; -notStandard;" priceAdj="100" inventoryAdj="200" levelFrequency="systemLevel:ruc|c|cur"/>
			<Sell	criteria="*NU -defective; -Illegal; -ID; -NotForSale;"	priceAdj="100"/>
			<Buy	criteria="amdNU -Illegal; -NotForSale;"		priceAdj="50"/>
			<Buy	criteria="*NU -Illegal; -ID; -NotForSale;"	priceAdj="90"/>
			<Buy	criteria="*NU -Illegal; -ID;"				priceAdj="10"/>
			
			<Refuel			criteria="f +BasicFuel; L:1-8;" priceAdj="100"/>
			<RepairArmor	criteria="a L:1-8;" priceAdj="100"/>
			<ReplaceArmor	criteria="a L:1-8;" priceAdj="100"/>
			<InstallDevice	criteria="d L:1-8;" priceAdj="100"/>
			<RemoveDevice	criteria="d L:1-8;" priceAdj="100"/>
			<Decontaminate	criteria="*"		priceAdj="100"/>

			<ConsumeTrade	criteria="{core.antimatterFuel}"	impact="2"/>
			<ConsumeTrade	criteria="{human.basicFood}"	impact="5"/>
			<ConsumeTrade	criteria="{human.lux}"		impact="3"/>
			<ConsumeTrade	criteria="{human.meds}"		impact="2"/>
			<ConsumeTrade	criteria="{human.res}"		impact="1"/>
			<ConsumeTrade	criteria="{core.ore}"			impact="2"/>
		</Trade>

		<Items>
			<RandomItem count="10" 
					criteria=		"ad L:1-8; +commonwealth; -defective; -Illegal; -Military; -Alien; -Specialty; -NotStandard; -NotForSale;"
					levelFrequency=	"systemLevel:r|c|cur"
					/>
			<RandomItem count="10" 
					criteria=		"*~adm -defective; -Illegal; -Military; -Alien; -Specialty; -NotStandard; -NotForSale;"
					levelFrequency=	"systemLevel:ru|c|cur"
					/>

			<Item count="4d12"	item="&itPteracniumFuelRod;" />
		</Items>

		<!-- Configuration -->
		
		<Devices>
			<Device deviceID="&itTeV9Blaster;"	omnidirectional="true"/>
		</Devices>

		<!-- Satellites -->
		
		<Satellites overlapCheck="asteroids">
			<Orbitals distance="12" angle="45">
				<Station type="&stCommonwealthTurret;" imageVariant="2"/>
			</Orbitals>

			<Orbitals distance="12" angle="135">
				<Station type="&stCommonwealthTurret;" imageVariant="1"/>
			</Orbitals>

			<Orbitals distance="12" angle="225">
				<Station type="&stCommonwealthTurret;" imageVariant="0"/>
			</Orbitals>

			<Orbitals distance="12" angle="315">
				<Station type="&stCommonwealthTurret;" imageVariant="3"/>
			</Orbitals>
		</Satellites>

		<!-- Ships and Defenses -->
		
		<Ships>
			<Lookup count="2" table="&tbCommDefenders;"/>
			<Lookup count="1d4" table="&tbCommPrivateCrafts;"/>
		</Ships>

		<Reinforcements minShips="5">
			<Table>
				<Lookup chance="75" table="&tbCommDefenders;"/>
				<Lookup chance="25" table="&tbCommPrivateCrafts;"/>
			</Table>
		</Reinforcements>

		<!-- Image and Effects -->
		
		<Image imageID="&rsCommonwealthSettlement;" imageWidth="320" imageHeight="290" viewportRatio="0.05"/>

		<DockingPorts
				portCount=		"10"
				portRadius=		"175"
				>
		</DockingPorts>
		
		<!-- Dock Screens -->
		
		<DockScreens>
			<Main>
				<Panes>
					<Default descID="descWelcome">
						<Actions>
							<Action id="actionMainHall" default="1">
								(rpgMissionAssignment {
									missionCriteria: (cat "n +commonwealthSettlement; =" (sysGetLevel) ";")
									noMissionTextID: 'descHallEmpty
									maxPerStation: 1
									})
							</Action>

							<Action id="actionCommoditiesExchange">
								(scrShowScreen gScreen &dsRPGCommoditiesExchange;)
							</Action>

							<Action id="actionDockServices">
								(rpgDockServices gPlayerShip)
							</Action>

							<Action id="actionUndock" cancel="1">
								<Exit/>
							</Action>
						</Actions>
					</Default>
				</Panes>
			</Main>
		</DockScreens>
		
		<!-- Events and Data -->

		<Language>
			<Text id="descWelcome">

				You are in the docking bay of a Commonwealth settlement. Except 
				for a few shuttles, the docking bay of this station is deserted.
				
				A few stationers in flight suits wander around on various tasks.

			</Text>
		</Language>
	</StationType>

	<!-- NavSign

		INITIAL DATA

		At create time we expect the following data to be initialized:

		Info:	A full description revealed if the player docks
		Sign:	The text of the sign.
	
	 -->

	<StationType UNID="&stCommonwealthNavSign;"
			name=				"(navigational beacon)"
			sovereign=			"&svIndependent;"
			dockScreen=			"&dsNavSign;"
			abandonedScreen=	"&dsAbandonedNavSign;"
			noMapLabel=			"true"

			mass=				"5000"
			armorID=			"&itUltraLightTitaniumArmor;"
			hitPoints=			"20"
			>

		<Names>: NavSign %s-%0%0%0</Names>

		<Image imageID="&rsStations1;" imageX="0" imageY="668" imageWidth="128" imageHeight="64"/>

		<DockingPorts>
			<Port x="-80"		y="0" />
		</DockingPorts>

		<Events>
			<OnCreate>
				(block (
					; These offsets control the position of the text relative to
					; the center of the sign (Cartessian coordinates)

					(xOffset 6)
					(yOffset 19)

					;	Sign text

					(languageTable (objGetData gSource 'languageTable))
					(signText (or
						(typTranslate languageTable (objGetData gSource 'signID))
						(objGetData gSource 'sign)
						(scrTranslate gScreen 'core.navSignText)
						))

					theID 
					)

					; Create an effect for the sign.

					(setq theID 
						(objAddOverlay gSource &ovNavSignText; (sysVectorPixelOffset gSource xOffset yOffset) 0)
						)

					; Set the text of the sign

					(objSetOverlayEffectProperty gSource theID 'text signText)
					)
			</OnCreate>

			<OnDestroy>
				; Remove all overlays
				(enum (objGetOverlays gSource) theID
					(objRemoveOverlay gSource theID)
					)
			</OnDestroy>
		</Events>

		<Language>
			<Text id="core.navSignText">Welcome!</Text>
		</Language>
	</StationType>

	<OverlayType UNID="&ovNavSignText;"
			attributes=         "effect"
			>
		<Effect>
			<Text text="Nav Sign"
					font="SmallBold"
					primaryColor="0xc4, 0xdf, 0x9b"
					/>
		</Effect>
	</OverlayType>

	<Globals>
		(block Nil
			(setq comSealedContainerHack (lambda ()
				; If we went to trial for having a sealed container, then set a flag so
				; that the container gets confiscated next time (instead of being imprisoned
				; again).
				;
				; To fix this hack we need to have an OnGlobalPlayerDocked event in which
				; we check for a smuggled sealed container (and set the appropriate crime)
				; instead of the setting the crime inside of GetGlobalDockScreen (which
				; should not have any side-effects).
				
				(if
					(and (not (objGetItems gPlayerShip "*I+SmugglersHold;")) 
							(objGetItems gPlayerShip "*U+SealedContainer;"))
						(objSetData gPlayerShip "00001002_ConfiscateSealedContainer" True)
						
					(objSetData gPlayerShip "00001002_ConfiscateSealedContainer" Nil)
					)
					
				; Same thing for slaves
				
				(if
					(and (objGetData gPlayerShip "slaveSales")
							(objGetItems gPlayerShip "* +slaves;"))
						(objSetData gPlayerShip "00001002_ConfiscateSlaves" True)
						
					(objSetData gPlayerShip "00001002_ConfiscateSlaves" Nil)
					)
				))
				
			(setq comTrafficControl (lambda (homeObj maxTraffic)
				(if (ls (count (sysFindObject homeObj "s D:0010300C_traffic;")) maxTraffic)
					(block (theShip)
						(setq theShip (sysCreateShip
							&tbCommTraffic;
							(random (sysFindObject Nil "G -uncharted;"))
							&svCommonwealth;
							&evCommTrafficBehavior;
							))
						(objSetObjRefData theShip "home" homeObj)
						(objFireEvent theShip "OrderBeginTraffic")
						)
					)
				))

			(setq intCommonwealthCrime (lambda (severity description)
				(if (gr severity (int (objGetData gPlayerShip "commonCrimeSeverity")))
					(block Nil
						(objSetData gPlayerShip "commonCrimeSeverity" severity)
						(objSetData gPlayerShip "commonCrime" description)
						)
					)
				))

			(setq intCommonwealthOnDestroy (lambda Nil
				(block Nil
					; Destroy items on the station
					(rpgDestroyItems gSource)

					; Add to the player's record
					(if (and gPlayerShip (eq aOrderGiver gPlayerShip))
						(intCommonwealthCrime 3 (cat "the destruction of " (objGetName gSource 4)))
						)
					)
				))
			)
	</Globals>

	<!-- Commonwealth Confiscate -->

	<DockScreen UNID="&dsCommonwealthConfiscate;"
			nestedScreen=	"true"
			inherit=		"&dsDockScreenBase;"
			>
		<Panes>
			<Default>
				<OnPaneInit>
					(block (desc itemToRemove itemsToConfiscate)
					
						; If we don't have a smuggler's cargo hold, then we confiscate
						; all illegal items.
						(if (not (objGetItems gPlayerShip "*I+SmugglersHold"))
							(setq itemsToConfiscate 
								(objGetItems gPlayerShip "*U +Illegal; -ID;")
								)
							)
							
						; If we don't have a military ID, then confiscate military items
						; NOTE: In this case, we honor any military ID.
						(if (not (objGetItems gPlayerShip "*+MilitaryID"))
							(setq itemsToConfiscate (append itemsToConfiscate
								(objGetItems gPlayerShip "*U +Military; -ID;")
								))
							)
					
						; Remove items
						(enum itemsToConfiscate itemToRemove
							(objRemoveItem gPlayerShip itemToRemove)
							)

						; Compose text
						(scrSetDescTranslate gScreen 'descConfiscate {
							itemList: (join (map itemsToConfiscate theItem (itmGetName theItem '(count escapeQuotes))) 'oxfordComma)
							})
						)
				</OnPaneInit>

				<Actions>
					<Action id="actionContinue" default="1" cancel="1">
						(block Nil
							(comSealedContainerHack)
							(scrExitScreen gScreen)
							)
					</Action>
				</Actions>
			</Default>
		</Panes>

		<Language>
			<Text id="descConfiscate">

				Commonwealth Customs has inspected your ship's cargo hold and
				confiscated %itemList%.

			</Text>
		</Language>
	</DockScreen>

	<!-- Commonwealth Imprison -->

	<DockScreen UNID="&dsCommonwealthImprison;"	
			nestedScreen=	"true"
			inherit=		"&dsDockScreenBase;"
			>
		<Panes>
			<Default>
				<OnPaneInit>
					(scrSetDescTranslate gScreen 'descArrested {
						crime: (objGetData gPlayerShip 'commonCrime)
						})
				</OnPaneInit>

				<Actions>
					<Action id="actionContinue" default="1" cancel="1">
						(scrShowPane gScreen "TrialIntro")
					</Action>
				</Actions>
			</Default>
			
			<TrialIntro>
				<OnPaneInit>
					(scrSetDescTranslate gScreen 'descTrialStart {
						crime: (objGetData gPlayerShip "commonCrime")
						})
				</OnPaneInit>
				
				<Actions>
					<Action id="actionGuilty" default="1" cancel="1">
						(switch
							; If this is a serious crime, then always prison
							(eq (objGetData gPlayerShip "commonCrimeSeverity") 3)
								(block Nil
									(setq gResult (scrTranslate gScreen 'descVerdictImprison1))
									(scrShowPane gScreen "VerdictImprison")
									)

							; If first offense, then the court is lenient
							(not (objGetData gPlayerShip "commonCrimeRecord"))
								(block Nil
									(setq gCost 5000)
									(setq gResult (scrTranslate gScreen 'descVerdictFine1 {
										fine: (fmtCurrency 'credit gCost)
										}))
									(scrShowPane gScreen "VerdictRelease")
									)
									
							; If second offense, then we're still lenient
							(eq (objGetData gPlayerShip "commonCrimeRecord") 1)
								(block Nil
									(setq gCost 25000)
									(setq gResult (scrTranslate gScreen 'descVerdictFine2 {
										fine: (fmtCurrency 'credit gCost)
										}))
									(scrShowPane gScreen "VerdictRelease")
									)
									
							; Otherwise, locked away
							(block Nil
								(setq gResult (scrTranslate gScreen 'descVerdictImprison2))
								(scrShowPane gScreen "VerdictImprison")
								)
							)
					</Action>
					
					<Action id="actionNotGuilty">
						(switch
							; Sometimes there is not enough evidence
							(leq (random 1 100) 25)
								(block Nil
									(setq gResult (scrTranslate gScreen 'descVerdictNotGuilty))
									(scrShowPane gScreen "VerdictNotGuilty")
									)
									
							; If this is a serious crime, then always prison
							(eq (objGetData gPlayerShip "commonCrimeSeverity") 3)
								(block Nil
									(setq gResult (scrTranslate gScreen 'descVerdictGuilty))
									(scrShowPane gScreen "VerdictImprison")
									)

							; If first offense, then the court is lenient
							(not (objGetData gPlayerShip "commonCrimeRecord"))
								(block Nil
									(setq gCost 25000)
									(setq gResult (scrTranslate gScreen 'descVerdictFine3 {
										fine: (fmtCurrency 'credit gCost)
										}))
									(scrShowPane gScreen "VerdictRelease")
									)
									
							; Otherwise, locked away
							(block Nil
								(setq gResult (scrTranslate gScreen 'descVerdictImprison2))
								(scrShowPane gScreen "VerdictImprison")
								)
							)
					</Action>
				</Actions>
			</TrialIntro>
			
			<VerdictNotGuilty>
				<OnPaneInit>
					(scrSetDesc gScreen gResult)
				</OnPaneInit>
				
				<Actions>
					<Action id="actionContinue" default="1" cancel="1">
						(block Nil
							(objSetData gPlayerShip "commonCrimeSeverity" 0)
							(objSetData gPlayerShip "commonCrime" Nil)
							(comSealedContainerHack)
							(scrExitScreen gScreen)
							)
					</Action>
				</Actions>
			</VerdictNotGuilty>
			
			<VerdictRelease>
				<OnPaneInit>
					(scrSetDesc gScreen gResult)
				</OnPaneInit>
				
				<Actions>
					<Action id="actionContinue" default="1" cancel="1">
						(if (geq (plyGetCredits gPlayer) gCost)
							(block Nil
								(plyCharge gPlayer gCost)
								(objIncData gPlayerShip "commonCrimeRecord" 1)
								(objSetData gPlayerShip "commonCrimeSeverity" 0)
								(objSetData gPlayerShip "commonCrime" Nil)
								(comSealedContainerHack)
								(scrExitScreen gScreen)
								)
							(scrShowPane gScreen "CantPay")
							)
					</Action>
				</Actions>
			</VerdictRelease>
			
			<VerdictImprison>
				<OnPaneInit>
					(scrSetDesc gScreen gResult)
				</OnPaneInit>
				
				<Actions>
					<Action id="actionContinue" default="1" cancel="1">
						(block Nil
							(plyDestroyed gPlayer 
								(scrTranslate gScreen 'epitaphImprisoned {
									crime: (objGetData gPlayerShip 'commonCrime)
									})
								)
							(scrExitScreen gScreen 'forceUndock)
							)
					</Action>
				</Actions>
			</VerdictImprison>

			<CantPay>
				<OnPaneInit>
					(scrSetDescTranslate gScreen 'descCannotAffordFine)
				</OnPaneInit>
				
				<Actions>
					<Action id="actionContinue" default="1" cancel="1">
						(block Nil
							(plyDestroyed gPlayer 
								(scrTranslate gScreen 'epitaphLostShip { })
								)
							(scrExitScreen gScreen 'forceUndock)
							)
					</Action>
				</Actions>
			</CantPay>
		</Panes>

		<Language>
			<Text id="descArrested">

				As you enter the station you are surrounded by heavily armed 
				soldiers. A Commonwealth official approaches you:

				"You are under arrest for %crime%."
			
			</Text>
			<Text id="descTrialStart">
			
				You appear before a magistrate who reads out the charges:
				
				"%name%, you are accused of %crime%. How do you plead?"

			</Text>
			<Text id="descVerdictImprison1">

				"In view of the seriousness of the crime, the Court has no 
				choice but to sentence you to a minimum of ten years in a 
				Commonwealth rehabilitation colony.

				"Court dismissed!"
			
			</Text>
			<Text id="descVerdictImprison2">

				"Your past criminal record gives me no expectation of future 
				good behavior. You are hereby sentenced to twenty years in a 
				Commonwealth rehabilitation colony.

				"Court dismissed!"
			
			</Text>
			<Text id="descVerdictFine1">
	
				"In view of your otherwise clean record, and your acceptance of
				responsibility, the Commonwealth fines you the sum of %fine% for
				your crimes.

				"Court dismissed!"

			</Text>
			<Text id="descVerdictFine2">

				"In view of your acceptance of responsibility, the Commonwealth 
				fines you the sum of %fine% for your crimes.

				"Court dismissed!"
			
			</Text>
			<Text id="descVerdictFine3">

				After a short trial, the Court finds you guilty as charged.

				"In view of your otherwise clean record the Commonwealth fines 
				you the sum of %fine% for your crimes.

				"Court dismissed!"
			
			</Text>
			<Text id="descVerdictNotGuilty">
			
				After a lengthy trial, the Court finds you not guilty due to 
				lack of evidence.

				"Our laws compel us to set you free. But if you are guilty, you 
				may find your conscience to be more of a torment than prison 
				ever could.

				"Court dismissed!"

			</Text>
			<Text id="descVerdictGuilty">

				After a trial, the Court finds you guilty as charged.

				"In view of the seriousness of the crime, the Court sentences 
				you to life without parole in a Commonwealth rehabilitation 
				colony.

				"Court dismissed!"
			
			</Text>
			<Text id="descCannotAffordFine">

				Unfortunately, you cannot afford to pay the fine. The 
				Commonwealth decides to sell your ship to cover your debt.
			
			</Text>
			<String id="actionGuilty">"[G]uilty."</String>
			<String id="actionNotGuilty">"[N]ot guilty."</String>

			<Text id="epitaphImprisoned">was imprisoned for %crime%</Text>
			<Text id="epitaphLostShip">lost %his% ship after a criminal conviction</Text>
		</Language>
	</DockScreen>

<!-- BEHAVIORS -->

	<!-- Commonwealth Traffic Behavior
	
		USAGE NOTES
		
		This controls random ships that travel between Commonwealth stations.
		To use:
		
		1. Create the ship at a stargate
		2. Set the event handler
		3. Set the home station
		4. Call "OrderBeginTraffic"
	
		EXTRA DATA
		
		behavior:			Ship's current behavior
								'enteredSystem			= Ship just entered the system
								'docked					= Ship is docked somewhere
								'leavingSystem			= Ship is heading out of the system
								
		home:				Ship's home station

	-->

	<ShipClass UNID="&evCommTrafficBehavior;"
			class=				"(commonwealth traffic behavior)"
			virtual=			"true"
			
			attributes=			"behaviorClass"
			>

		<Events>
			<OrderBeginTraffic>
				(block (homeObj)
					; If the home station is not set, set it now
					(if (not (setq homeObj (objGetObjRefData gSource "home")))
						(block Nil
							(setq homeObj (sysFindObject gSource "TAFN +commonwealth; +primary;"))
							(if (not homeObj)
								(setq homeObj (sysFindObject gSource "TAFN +populated; -occupation;"))
								)

							(objSetObjRefData gSource "home" homeObj)
							)
						)

					; Set data so we know we are traffic
					(objSetData gSource "0010300C_traffic" True)

					; Set state
					(objSetData gSource "behavior" 'enteredSystem)
					)
			</OrderBeginTraffic>
			
			<OnOrdersCompleted>
				(block (behavior newBehavior allDests dockedAt allWrecks allLoot)
					(setq behavior (objGetData gSource "behavior"))
					(setq dockedAt (shpGetDockObj gSource))
					
					; If we're docked at an object, dump any loot that we found
					(if (and dockedAt
							(objHasAttribute dockedAt "populated")
							
							; Compose a list of all loot on board that the station
							; might want to buy from us.
							
							(setq allLoot (filter (objGetItems gSource "*~mf U") theItem
								(objGetBuyPrice dockedAt theItem)
								))
							)
						(block Nil
							(enum allLoot theItem (objRemoveItem gSource theItem))
							(enum allLoot theItem (objAddItem dockedAt theItem))
							)
						)
					
					; Figure out what to do next
					(switch

						; Check for wrecks in the area; if we find some, then loot them
						(and (leq (objGetDestiny gSource) 180)
								(not (objHasAttribute gSource "freighter"))
								(leq (random 1 100) 50)
								
								; Compose a list of all wrecks in the area
								
								(setq allWrecks (rpgFindWrecksToSalvage gSource '0010300c_marked))
								)
							(block (destObj)
								(setq destObj (random allWrecks))
								(shpOrder gSource 'loot destObj)
								(objSetData destObj "0010300c_marked" True)
								(objSetData gSource "behavior" 'looting)
								)
					
						; If we have no destinations or randomly, we gate out
						(or (and (not (eq behavior 'enteredSystem)) (leq (random 1 100) 20))
								(not 
									; Compose a list of stations that we could go to.
									; We exclude the station that we're docked with and any
									; stations that don't have too many dock ports open.

									(setq allDests (filter (sysFindObject gSource "TAF +populated; -korolovShipping; -occupation;") theObj 
										(and (gr (objGetOpenDockingPortCount theObj) 1)
											(or (not dockedAt) (not (eq dockedAt theObj)))
											(not (objFireEvent theObj 'GetTrafficStatus { aObj:gSource }))
											)
										))
									)
								)
							(block (gateObj)
								(setq gateObj (random (sysFindObject gSource "G -uncharted;")))
								(shpOrder gSource 'gate gateObj)
								(objSetData gSource "behavior" 'leavingSystem)
								)
								
						; Otherwise, we go to another station
						(block (destObj)
							(setq destObj (random allDests))
							(shpOrder gSource 'dock destObj)
							(shpOrder gSource 'waitForThreat (random 10 60))
							(objSetData gSource "behavior" 'docked)
							)
						)
						
					; If we were docked at an object that we just looted, then destroy the object
					(if (and (objGetData dockedAt "0010300c_marked")
							(ls (objGetProperty dockedAt 'mass) 2000)
							(not (objGetProperty dockedAt 'immutable))
							)
						(objDestroy dockedAt gSource)
						)
					)
			</OnOrdersCompleted>
		</Events>
	</ShipClass>
	
<!-- BASE CLASSES -->
	
	<!-- Commonwealth Station Base Class
	
	USAGE: Commonwealth stations should inherit from this class. Derived classes
		should manually call OnCreate and OnDestroy in case they need to override
		those events.
	
	-->
	
	<Type unid="&baCommonwealthStation;"
			inherit=			"&unidCommonText;"
			>
		<Properties>
			<!--
			By default we accept any military ID (even ones from APD or ED).
			-->
			<Constant	id="rpg.checkMilitaryID">"* +militaryID;"</Constant>
			
			<!--
			Check radioactive status when player docks. If the player is 
			radioactive, we check to see if the station decontaminates (using
			trade descriptions). If not, we refuse dock.
			-->
			<Definition	id="rpg.checkRadioactive">True</Definition>

			<!--
			By default we reveal unknown items when they are for sale.
			-->
			<Constant	id="rpg.showActualItem">True</Constant>

			<!--
			A destroyed station may give out the following missions. Unless the
			station was destroyed by the player, in which case, this criteria
			will change.
			-->
			<Data		id="rpg.triageMissionCriteria">(cat "n +commonwealth; +triage; -destroyedByPlayer; =" (sysGetLevel) ";")</Data>
		</Properties>

		<Events>
			<OnDestroy>
				(block ()

					;	Destroy items on the station because we don't want too 
					;	much loot

					(rpgDestroyItems gSource)

					;	Figure out if we need to retaliate

					(switch
						;	If the player killed us, then this is a Commonwealth
						;	crime.

						(and gPlayerShip (= aOrderGiver gPlayerShip))
							(block ()
								(intCommonwealthCrime 3 
									(objTranslate gSource 'strDestroyedStationCrime {
										objName: (objGetName gSource 'article)
										})
									)

								(objSetProperty gSource 'rpg.triageMissionCriteria 
									(cat "n +commonwealth; +triage; +destroyedByPlayer; =" (sysGetLevel) ";")
									)
								)

						;	If the destroyer is a capital ship of some sort
						;	(e.g., a Xenophobe worldship) then we remember that
						;	and possibly spawn a revenge mission.

						(and aOrderGiver
								(objMatches aOrderGiver gSource "sAE +capitalShip;")
								)
							(block (missionObj)
								(setq missionObj (msnCreate &msCommonwealthRevenge01; gSource {
									targetID: (objGetID aOrderGiver)
									}))
								)
						)
					)
			</OnDestroy>

			<OnPlayerSoldItem>
				(switch
					;	If the player sells an illegal item to a Commonwealth station
					;	then we register an achievement.

					(itmMatches gItem "* +illegal")
						(unvSetAchievement 'humanSpace.blackTrafficker)
					)
			</OnPlayerSoldItem>
		</Events>

		<Language>
			<Text id="actionMainHall">[M]eeting Hall</Text>

			<Text id="descHallEmpty">
				(block (
					(commemorationText (objGetData gSource 'core.missionCommemoration))
					)
					(switch
						commemorationText
							(objTranslate gSource 'descHallCommemoration { text:commemorationText })

						(objTranslate gSource 'descHallBusy)
						)
					)
			</Text>
			<Text id="descHallBusy">
				The meeting hall is busy with commercial activity; everyone goes about their business.
			</Text>
			<Text id="descHallCommemoration">
				The hall is empty, but in the corner you can see %text%.
			</Text>

			<Text id="strDestroyedStationCrime">
				the destruction of %objName%
			</Text>

			<Text id="core.deconDesc">

				Commonwealth Customs stops your ship for decontamination. You 
				are automatically charged %cost% for decontaminating your ship.

			</Text>
			<Text id="core.cannotAffordDecon">

				Commonwealth Customs stops your ship.

				"Sorry, your ship is radioactive and you do not have %cost%
				to pay for decontamination."

			</Text>
			<Text id="core.cannotDecon">
				
				Commonwealth Customs stops your ship.

				"Sorry, we don't have the facilities to deal with a radioactive
				ship!"
				
			</Text>
		</Language>
	</Type>

<!-- RESOURCES -->

	<Image UNID="&rsCommonwealthArmoredColony;"	bitmap="Resources\CommonwealthColonyArmored.jpg" bitmask="Resources\CommonwealthColonyArmoredMask.bmp"  loadOnUse="true"/>
	<Image UNID="&rsCommonwealthColony;"		bitmap="Resources\CommonwealthColony.jpg" bitmask="Resources\CommonwealthColonyMask.bmp"  loadOnUse="true"/>
	<Image UNID="&rsCommonwealthDryDock;"		bitmap="Resources\CommonwealthDryDock.jpg" bitmask="Resources\CommonwealthDryDockMask.bmp"  loadOnUse="true"/>
	<Image UNID="&rsCommonwealthHabitat;"		bitmap="Resources\CommonwealthHabitat.jpg" bitmask="Resources\CommonwealthHabitatMask.bmp"  loadOnUse="true"/>
	<Image UNID="&rsCommonwealthMedicalColony;"	bitmap="Resources\CommonwealthMedicalColony.jpg" bitmask="Resources\CommonwealthMedicalColonyMask.bmp"  loadOnUse="true"/>
	<Image UNID="&rsCommonwealthResidentials;"	bitmap="Resources\CommonwealthResidentials.jpg" bitmask="Resources\CommonwealthResidentialsMask.bmp"  loadOnUse="true"/>
	<Image UNID="&rsCommonwealthSettlement;"	bitmap="Resources\CommonwealthSettlement.jpg" bitmask="Resources\CommonwealthSettlementMask.bmp"  loadOnUse="true"/>
	<Image UNID="&rsCommonwealthSlumsImage;"	bitmap="Resources\CommonwealthSlums.jpg" bitmask="Resources\CommonwealthSlumsMask.bmp"  loadOnUse="true"/>
	<Image UNID="&rsContainerHabitat;"			bitmap="Resources\CommonwealthContainerHabitat.jpg" bitmask="Resources\CommonwealthContainerHabitatMask.bmp"  loadOnUse="true"/>

</TranscendenceModule>
