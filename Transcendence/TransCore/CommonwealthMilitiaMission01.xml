<?xml version="1.0" ?>

<TranscendenceModule>

	<!-- Mission: Patrol Stargates ================================================

	EXTRA DATA

	reward:			Reward (in credits) for completing mission
	targetID:		The players current target to recon
	waypoints:		List of remaining objID which player must recon

	=========================================================================== -->

	<MissionType UNID="&msCMGatePatrol;"
			name=			"Commonwealth Militia 01: Patrol Orbital Lanes"
			attributes=		"commonwealthMilitia, rank0"

			level=			"2-7"

			expireTime=			"5400"
			failureOnReturnToSystem="5400"
			>
		<Properties>
			<Variant id="reward">
				;	Half the standard reward because this is an easy mission.
				(divide 
					(@ (typ@ &unidCommonwealthMilitia; 'volunteerRewardTable) (min (sysGetLevel) 10))
					2
					)
			</Variant>
		</Properties>

		<Image imageID="&rsCommonwealthMilitiaInsignia;" imageX="512" imageY="256" imageWidth="256" imageHeight="256"/>

		<Events>
			<OnCreate>
				(block (
					(gateList (sysFindObject gSource "G -uncharted;"))
					)
					(switch
						;	Check if player is experienced enough
						(not (milCanEnterCC))
							(msnDestroy gSource)

						;	Make sure there are at least 2 gates
						(ls (count gateList) 2)
							(msnDestroy gSource)

						;	The two gates better be at least 50 light-seconds
						;	away from each other
						(ls (objGetDistance (@ gateList 0) (@ gateList 1)) 50)
							(msnDestroy gSource)

						(block Nil
							(msnSetData gSource 'waypoints
								(list
									(objGetID (objGetObjRefData (@ gateList 0) "NavBeacon"))
									(objGetID (@ gateList 0))
									(objGetID (@ gateList 1))
									(objGetID (objGetObjRefData (@ gateList 1) "NavBeacon"))
									(objGetID aOwnerObj)
									)
								)
							)
						)
					)
			</OnCreate>

			<OnAccepted>
				(msnFireEvent gSource 'OnNextWaypoint)
			</OnAccepted>

			<OnObjReconned>
				(if (= (objGetID aObj) (msnGetData gSource 'targetID))
					(msnFireEvent gSource 'OnNextWaypoint)
					)
			</OnObjReconned>

			<OnNextWaypoint>
				(block (
					(waypoints (msnGetData gSource 'waypoints))
					)
					(if waypoints
						;	If we're not done, then prepare the next encounter
						(block (
							(nextWaypoint (objGetObjByID (@ waypoints 0)))
							)
							;	Prepare the station to be reconned
							(staClearReconned nextWaypoint)
							(staSetFireReconEvent nextWaypoint)
							(msnRegisterForEvents gSource nextWaypoint)

							;	Create some marauders at the waypoint and send them
							;	towards the player
							(if (leq (random 1 100) 60)
								(sysAddEncounterEvent 0 gPlayerShip &etMarauderAmbush1; nextWaypoint)
								)

							;	Remember which waypoint we want
							(msnSetData gSource 'targetID (@ waypoints 0))
							(msnSetData gSource 'waypoints (lnkRemove waypoints 0))
							(msnSetPlayerTarget gSource)
							)

						;	Otherwise, mission is done
						(msnSuccess gSource)
						)
					)
			</OnNextWaypoint>

			<OnSetPlayerTarget>
				(rpgSetTarget gSource aReason (objGetObjByID (msnGetData gSource 'targetID)) 'escort)
			</OnSetPlayerTarget>

			<OnCompleted>
				(milMissionCompleted gSource aReason gData)
			</OnCompleted>

			<OnReward>
				(milGiveReward gSource)
			</OnReward>
		</Events>

		<Language>
			<Text id="Name">
				Patrol Orbital Lanes
			</Text>
			<Text id="Summary">
				(msnTranslate gSource 'textSummary {
					systemName: (sysGetName)
					payment: (fmtCurrency 'credit (msn@ gSource 'reward))
					})
			</Text>
			<Text id="Intro">
				(list
					{	descID:'textIntro1	}
					)
			</Text>
			<Text id="Briefing">
				(list
					{	descID:'textBriefing1		labelID:'actionBriefing1	
						data: {
							payment: (fmtCurrency 'credit (msn@ gSource 'reward))
							}
						}
					{	descID:'textBriefing2		}
					)
			</Text>
			<Text id="AcceptReply">
				(list
					{	descID:'textAcceptReply1
						data: {
							payment: (fmtCurrency 'credit (msn@ gSource 'reward))
							}
						}
					)
			</Text>
			<String id="DeclineReply">
				"Why don't you make yourself useful and get us some tea or something."
			</String>
			<String id="InProgress">
				"What is your major malfunction!? Get back out there and complete your mission!"
			</String>
			<String id="FailureDebrief">
				"You screwed that mission all the way to Sol and back. You better hit the sims, pilot!"
			</String>
			<Text id="SuccessDebrief">
				(list
					{	descID:'textSuccessDebrief1		
						data: {
							payment: (fmtCurrency 'credit (msn@ gSource 'reward))
							}
						}
					)
			</Text>

			<Text id="textSummary">

				Your mission is to patrol the orbital lanes in %systemName%
				and destroy any enemy ships you encounter.

				System: %systemName%\n
				Payment: %payment%

			</Text>
			<Text id="textIntro1">
				
				You are in the command center surrounded by wall maps and 
				scanner displays. The commanding officer of the fortress looks 
				up from his charts:

				"Are you looking for a mission, pilot?"

			</Text>
			<Text id="textBriefing1">
			
				"Your mission is to patrol the orbital lanes that access the 
				major stargates. Your patrol will take you in a circuit through 
				the system that passes each stargate and returns back here.

				"We'll pay you %payment% if you get back here in one piece."
				
			</Text>
			<String id="actionBriefing1">"[W]hat are the rules of engagement?"</String>
			<Text id="textBriefing2">

				"Any hostile ships in the lanes are fair game. We expect you to
				take them out. But if you run into an enemy station, it's your 
				call. Leave them for us if you're outgunned.
				
				"Understood?"
			
			</Text>
			<Text id="textAcceptReply1">
			
				"Good luck, pilot!"

			</Text>
			<Text id="textSuccessDebrief1">
			
				"Good work, pilot! That was an outstanding mission. We've 
				deposited %payment% to your account.

			</Text>
		</Language>
	</MissionType>

</TranscendenceModule>
